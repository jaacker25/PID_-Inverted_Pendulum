

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Tue Jun 05 06:08:42 2012

HI-TECH Software Omniscient Code Generator build 3884
     1                           	processor	16F684
     2                           	fnconf	fnauto1,??,?,0
     3                           	opt	pw 79
     4                           	psect	maintext,global,class=CODE,delta=2
     5                           	psect	text93,local,class=CODE,delta=2
     6                           	psect	text94,local,class=CODE,delta=2
     7                           	psect	text95,local,class=CODE,delta=2
     8                           	psect	text96,local,class=CODE,delta=2
     9                           	psect	text97,local,class=CODE,delta=2
    10                           	psect	text98,local,class=CODE,delta=2
    11                           	psect	text99,local,class=CODE,delta=2
    12                           	psect	text100,local,class=CODE,delta=2
    13                           	psect	intrtext,global,class=CODE,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text102,local,class=CODE,delta=2
    16                           	psect	strings,global,reloc=256,class=CODE,delt
      +                          a=2
    17                           	psect	rbss_0,global,class=BANK0,space=1,delta=
      +                          1
    18                           	psect	common,global,class=COMMON,space=1,delta
      +                          =1
    19                           	psect	rbit_0,global,bit,class=BANK0,space=1,de
      +                          lta=1
    20                           	psect	fnauto1,global,class=BANK1,space=1,delta
      +                          =1
    21                           	dabs	1,0x67,4
    22                           	dabs	1,0x6B,2
    23                           	dabs	1,0x6D,2
    24                           	dabs	1,0x61,2
    25                           	dabs	1,0x63,2
    26                           	dabs	1,0x65,2
    27                           	dabs	1,0x79,2
    28                           	dabs	1,0x7B,1
    29                           	dabs	1,0x7C,1
    30                           	dabs	1,0x6F,1
    31                           	dabs	1,0x77,1
    32                           	dabs	1,0x78,1
    33                           	dabs	1,0x73,2
    34                           	dabs	1,0x75,2
    35                           	dabs	1,0x70,2
    36                           	dabs	1,0x72,1
    37                           	dabs	1,0x7D,1
    38                           	dabs	1,0x7E,2
    39  0000                     
    40  0000                     
    41  0000                     
    42  0000                     
    43  0000                     
    44  0000                     
    45  0000                     
    46  0000                     
    47  0000                     
    48  0000                     
    49  0000                     
    50  0000                     
    51  0000                     
    52  0000                     
    53  0000                     
    54  0000                     
    55  0000                     
    56  0000                     
    57  0000                     
    58  0000                     __tempreg	set	160
    59  0000                     __Lrbss_0	set	97
    60  0000                     __Hrbss_0	set	112
    61  0000                     __Lcommon	set	119
    62  0000                     __Hcommon	set	125
    63  0000                     
    64  0000                     
    65  0000                     __Lramdata	set	0
    66  0000                     __Hramdata	set	1
    67  0000                     
    68  0000                     
    69  0000                     
    70  0000                     
    71  0000                     
    72  0000                     
    73  0000                     
    74  0000                     
    75  0000                     
    76  0000                     
    77  0000                     
    78  0000                     
    79  0000                     
    80  0000                     
    81  0000                     
    82  0000                     
    83  0000                     
    84  0000                     
    85  0000                     
    86  0000                     
    87  0000                     
    88  0000                     
    89  0000                     
    90                           
    91                           	psect	maintext
    92                           ;Data sizes: Strings 0, constant 0, data 0, bss
      +                           0, persistent 0 stack 31
    93                           ; *************** function _main **************
      +                          *
    94                           ; Defined at:
    95                           ;		line 19 in file "C:\Users\Jorge Aguilar\Docu
      +                          ments\PROGRAMACION\SEGWAY Jhons\16f684\c684.c"
    96                           ; Parameters:
    97                           ;		None
    98                           ; Auto variables:
    99                           ;		None
   100                           ; Return value:
   101                           ;		type: void 
   102                           ;		size: 0
   103                           ; Registers used:
   104                           ;		wreg, status,2, status,0, pclath, cstack
   105                           ; Tracked objects:
   106                           ;		On entry : BFF/0
   107                           ;		On exit  : BFF/0
   108                           ;		Unchanged: FFFFF800/0
   109                           ; Data sizes:
   110                           ;		Autos:    0
   111                           ;		Params:   0
   112                           ;		Temp:     0
   113                           ;		Total:    0
   114                           ; This function calls:
   115                           ;		_Inicializa
   116                           ;		_Constantes
   117                           ;		_PID
   118                           ; This function is called by:
   119                           ;		Startup code after reset
   120                           ; This function uses a non-reentrant model
   121                           ; 
   122                           ;c684.c: 18: void main()
   123                           ;c684.c: 19: {
   124  001E                     _main:
   125                           ; Regs used in _main: [wreg+status,2+status,0+p
      +                          clath+cstack]
   126                           ;c684.c: 20: Inicializa();
   127  001E  2373               	fcall	_Inicializa
   128                           ;c684.c: 21: Constantes();
   129  001F  23D4               	fcall	_Constantes
   130                           ;c684.c: 22: while(1)
   131  0020                     l7:
   132                           ;c684.c: 23: {
   133                           ;c684.c: 24: if(do_PID){
   134  0020  1C7D               	btfss	125,0
   135  0021  2820               	goto	l7
   136                           ;c684.c: 25: PID();
   137  0022  2024               	fcall	_PID
   138  0023  2820               	goto	l7
   139                           ; =============== function _main ends =========
      +                          ======
   140  0024                     __end_of_main:
   141                           
   142                           	psect	text93
   143                           ; *************** function _PID ***************
   144                           ; Defined at:
   145                           ;		line 165 in file "C:\Users\Jorge Aguilar\Doc
      +                          uments\PROGRAMACION\SEGWAY Jhons\16f684\c684.c"
   146                           ; Parameters:
   147                           ;		None
   148                           ; Auto variables:
   149                           ;		None
   150                           ; Return value:
   151                           ;		type: void 
   152                           ;		size: 0
   153                           ; Registers used:
   154                           ;		wreg, status,2, status,0, pclath, cstack
   155                           ; Tracked objects:
   156                           ;		On entry : 100/0
   157                           ;		On exit  : 100/0
   158                           ;		Unchanged: FFFFF800/0
   159                           ; Data sizes:
   160                           ;		Autos:    0
   161                           ;		Params:   0
   162                           ;		Temp:     5
   163                           ;		Total:    5
   164                           ; This function calls:
   165                           ;		___awdiv
   166                           ;		___wmul
   167                           ;		___lmul
   168                           ;		___aldiv
   169                           ;		_abs
   170                           ; This function is called by:
   171                           ;		_main
   172                           ; This function uses a non-reentrant model
   173                           ; 
   174                           ;c684.c: 164: void PID()
   175                           ;c684.c: 165: {
   176  0024                     _PID:
   177                           ; Regs used in _PID: [wreg+status,2+status,0+pc
      +                          lath+cstack]
   178                           ;c684.c: 166: integral_term = derivative_term =
      +                           0;
   179  0024  01ED               	clrf	109
   180  0025  01EE               	clrf	110
   181  0026  01E1               	clrf	97
   182  0027  01E2               	clrf	98
   183                           ;c684.c: 169: SumE = SumE + en0;
   184  0028  087B               	movf	123,w
   185  0029  1683               	bsf	3,5	;RP0=1, select bank1
   186  002A  00A0               	movwf	??_PID^(0+128)
   187  002B  01A1               	clrf	(??_PID+1)^(0+128)
   188  002C  1BA0               	btfsc	??_PID^(0+128),7
   189  002D  03A1               	decf	(??_PID+1)^(0+128),f
   190  002E  1283               	bcf	3,5	;RP0=0, select bank0
   191  002F  1683               	bsf	3,5	;RP0=1, select bank1
   192  0030  1283               	bcf	3,5	;RP0=0, select bank0
   193  0031  07EB               	addwf	107,f
   194  0032  1803               	btfsc	3,0
   195  0033  0AEC               	incf	108,f
   196  0034  1683               	bsf	3,5	;RP0=1, select bank1
   197  0035  0821               	movf	(??_PID+1)^(0+128),w
   198  0036  1283               	bcf	3,5	;RP0=0, select bank0
   199  0037  07EC               	addwf	108,f
   200                           ;c684.c: 170: if(SumE > SumE_Max){
   201  0038  0874               	movf	116,w
   202  0039  3A80               	xorlw	128
   203  003A  1683               	bsf	3,5	;RP0=1, select bank1
   204  003B  00A0               	movwf	??_PID^(0+128)
   205  003C  1283               	bcf	3,5	;RP0=0, select bank0
   206  003D  086C               	movf	108,w
   207  003E  3A80               	xorlw	128
   208  003F  1683               	bsf	3,5	;RP0=1, select bank1
   209  0040  0220               	subwf	??_PID^(0+128),w
   210  0041  1D03               	btfss	3,2
   211  0042  2846               	goto	u20510
   212  0043  1283               	bcf	3,5	;RP0=0, select bank0
   213  0044  086B               	movf	107,w
   214  0045  0273               	subwf	115,w
   215  0046                     u20510:
   216  0046  1683               	bsf	3,5	;RP0=1, select bank1
   217                           ;c684.c: 171: SumE = SumE_Max;
   218  0047  1283               	bcf	3,5	;RP0=0, select bank0
   219  0048  1803               	btfsc	3,0
   220  0049  284E               	goto	L2
   221  004A  0874               	movf	116,w
   222  004B  00EC               	movwf	108
   223  004C  0873               	movf	115,w
   224  004D  00EB               	movwf	107
   225                           ;c684.c: 172: }
   226                           ;c684.c: 173: if(SumE < SumE_Min){
   227  004E                     L2:
   228  004E  086C               	movf	108,w
   229  004F  3A80               	xorlw	128
   230  0050  1683               	bsf	3,5	;RP0=1, select bank1
   231  0051  00A0               	movwf	??_PID^(0+128)
   232  0052  1283               	bcf	3,5	;RP0=0, select bank0
   233  0053  0876               	movf	118,w
   234  0054  3A80               	xorlw	128
   235  0055  1683               	bsf	3,5	;RP0=1, select bank1
   236  0056  0220               	subwf	??_PID^(0+128),w
   237  0057  1D03               	btfss	3,2
   238  0058  285C               	goto	u20610
   239  0059  1283               	bcf	3,5	;RP0=0, select bank0
   240  005A  0875               	movf	117,w
   241  005B  026B               	subwf	107,w
   242  005C                     u20610:
   243  005C  1683               	bsf	3,5	;RP0=1, select bank1
   244  005D  1803               	btfsc	3,0
   245  005E  2864               	goto	l32
   246                           ;c684.c: 174: SumE = SumE_Min;
   247  005F  1283               	bcf	3,5	;RP0=0, select bank0
   248  0060  0876               	movf	118,w
   249  0061  00EC               	movwf	108
   250  0062  0875               	movf	117,w
   251  0063  00EB               	movwf	107
   252  0064                     l32:
   253                           ;c684.c: 175: }
   254                           ;c684.c: 176: integral_term = SumE / 256;
   255  0064  1683               	bsf	3,5	;RP0=1, select bank1
   256  0065  01A7               	clrf	(?___awdiv+2)& (0+127)
   257  0066  3001               	movlw	1
   258  0067  00A8               	movwf	((?___awdiv+2)& (0+127)+1)
   259  0068  1283               	bcf	3,5	;RP0=0, select bank0
   260  0069  1683               	bsf	3,5	;RP0=1, select bank1
   261  006A  1283               	bcf	3,5	;RP0=0, select bank0
   262  006B  086C               	movf	108,w
   263  006C  1683               	bsf	3,5	;RP0=1, select bank1
   264  006D  00A6               	movwf	(?___awdiv+1)^(0+128)
   265  006E  1283               	bcf	3,5	;RP0=0, select bank0
   266  006F  086B               	movf	107,w
   267  0070  1683               	bsf	3,5	;RP0=1, select bank1
   268  0071  00A5               	movwf	?___awdiv^(0+128)
   269  0072  2468               	fcall	___awdiv
   270  0073  1283               	bcf	3,5	;RP0=0, select bank0
   271  0074  1683               	bsf	3,5	;RP0=1, select bank1
   272  0075  0826               	movf	(?___awdiv+1)^(0+128),w
   273  0076  1283               	bcf	3,5	;RP0=0, select bank0
   274  0077  00E2               	movwf	98
   275  0078  1683               	bsf	3,5	;RP0=1, select bank1
   276  0079  0825               	movf	?___awdiv^(0+128),w
   277  007A  1283               	bcf	3,5	;RP0=0, select bank0
   278  007B  00E1               	movwf	97
   279                           ;c684.c: 177: integral_term = integral_term * k
      +                          i;
   280  007C  1683               	bsf	3,5	;RP0=1, select bank1
   281  007D  1283               	bcf	3,5	;RP0=0, select bank0
   282  007E  0866               	movf	102,w
   283  007F  1683               	bsf	3,5	;RP0=1, select bank1
   284  0080  00A8               	movwf	(?___wmul+3)& (0+127)
   285  0081  1283               	bcf	3,5	;RP0=0, select bank0
   286  0082  0865               	movf	101,w
   287  0083  1683               	bsf	3,5	;RP0=1, select bank1
   288  0084  00A7               	movwf	(?___wmul+2)& (0+127)
   289  0085  1283               	bcf	3,5	;RP0=0, select bank0
   290  0086  1683               	bsf	3,5	;RP0=1, select bank1
   291  0087  1283               	bcf	3,5	;RP0=0, select bank0
   292  0088  0862               	movf	98,w
   293  0089  1683               	bsf	3,5	;RP0=1, select bank1
   294  008A  00A6               	movwf	(?___wmul+1)^(0+128)
   295  008B  1283               	bcf	3,5	;RP0=0, select bank0
   296  008C  0861               	movf	97,w
   297  008D  1683               	bsf	3,5	;RP0=1, select bank1
   298  008E  00A5               	movwf	?___wmul^(0+128)
   299  008F  24E0               	fcall	___wmul
   300  0090  1283               	bcf	3,5	;RP0=0, select bank0
   301  0091  1683               	bsf	3,5	;RP0=1, select bank1
   302  0092  0826               	movf	(?___wmul+1)^(0+128),w
   303  0093  1283               	bcf	3,5	;RP0=0, select bank0
   304  0094  00E2               	movwf	98
   305  0095  1683               	bsf	3,5	;RP0=1, select bank1
   306  0096  0825               	movf	?___wmul^(0+128),w
   307  0097  1283               	bcf	3,5	;RP0=0, select bank0
   308  0098  00E1               	movwf	97
   309                           ;c684.c: 178: integral_term = integral_term / 1
      +                          6;
   310  0099  3010               	movlw	16
   311  009A  1683               	bsf	3,5	;RP0=1, select bank1
   312  009B  00A7               	movwf	(?___awdiv+2)& (0+127)
   313  009C  01A8               	clrf	(?___awdiv+3)& (0+127)
   314  009D  1283               	bcf	3,5	;RP0=0, select bank0
   315  009E  1683               	bsf	3,5	;RP0=1, select bank1
   316  009F  1283               	bcf	3,5	;RP0=0, select bank0
   317  00A0  0862               	movf	98,w
   318  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   319  00A2  00A6               	movwf	(?___awdiv+1)^(0+128)
   320  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   321  00A4  0861               	movf	97,w
   322  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   323  00A6  00A5               	movwf	?___awdiv^(0+128)
   324  00A7  2468               	fcall	___awdiv
   325  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   326  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   327  00AA  0826               	movf	(?___awdiv+1)^(0+128),w
   328  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   329  00AC  00E2               	movwf	98
   330  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   331  00AE  0825               	movf	?___awdiv^(0+128),w
   332  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   333  00B0  00E1               	movwf	97
   334                           ;c684.c: 181: derivative_term = en0 - en3;
   335  00B1  0877               	movf	119,w
   336  00B2  027B               	subwf	123,w
   337  00B3  00ED               	movwf	109
   338  00B4  01EE               	clrf	110
   339  00B5  1C03               	btfss	3,0
   340  00B6  03EE               	decf	110,f
   341  00B7  1BFB               	btfsc	123,7
   342  00B8  03EE               	decf	110,f
   343  00B9  1BF7               	btfsc	119,7
   344  00BA  0AEE               	incf	110,f
   345                           ;c684.c: 182: if(derivative_term > 120){
   346  00BB  086E               	movf	110,w
   347  00BC  3A80               	xorlw	128
   348  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   349  00BE  00A0               	movwf	??_PID^(0+128)
   350  00BF  3080               	movlw	128
   351  00C0  0220               	subwf	??_PID^(0+128),w
   352  00C1  1D03               	btfss	3,2
   353  00C2  28C6               	goto	u20810
   354  00C3  3079               	movlw	121
   355  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   356  00C5  026D               	subwf	109,w
   357  00C6                     u20810:
   358  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   359  00C7  1C03               	btfss	3,0
   360  00C8  28CD               	goto	l33
   361                           ;c684.c: 183: derivative_term = 120;
   362  00C9  3078               	movlw	120
   363  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   364  00CB  00ED               	movwf	109
   365  00CC  01EE               	clrf	110
   366  00CD                     l33:
   367                           ;c684.c: 184: }
   368                           ;c684.c: 185: if(derivative_term < -120){
   369  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   370  00CE  086E               	movf	110,w
   371  00CF  3A80               	xorlw	128
   372  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   373  00D1  00A0               	movwf	??_PID^(0+128)
   374  00D2  307F               	movlw	127
   375  00D3  0220               	subwf	??_PID^(0+128),w
   376  00D4  1D03               	btfss	3,2
   377  00D5  28D9               	goto	u20910
   378  00D6  3088               	movlw	136
   379  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   380  00D8  026D               	subwf	109,w
   381  00D9                     u20910:
   382  00D9  1683               	bsf	3,5	;RP0=1, select bank1
   383  00DA  1803               	btfsc	3,0
   384  00DB  28E1               	goto	l34
   385                           ;c684.c: 186: derivative_term = -120;
   386  00DC  3088               	movlw	136
   387  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   388  00DE  00ED               	movwf	109
   389  00DF  30FF               	movlw	255
   390  00E0  00EE               	movwf	110
   391  00E1                     l34:
   392                           ;c684.c: 187: }
   393                           ;c684.c: 188: derivative_term = derivative_term
      +                           * kd;
   394  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   395  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   396  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   397  00E4  0864               	movf	100,w
   398  00E5  1683               	bsf	3,5	;RP0=1, select bank1
   399  00E6  00A8               	movwf	(?___wmul+3)& (0+127)
   400  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   401  00E8  0863               	movf	99,w
   402  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   403  00EA  00A7               	movwf	(?___wmul+2)& (0+127)
   404  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   405  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   406  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   407  00EE  086E               	movf	110,w
   408  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   409  00F0  00A6               	movwf	(?___wmul+1)^(0+128)
   410  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   411  00F2  086D               	movf	109,w
   412  00F3  1683               	bsf	3,5	;RP0=1, select bank1
   413  00F4  00A5               	movwf	?___wmul^(0+128)
   414  00F5  24E0               	fcall	___wmul
   415  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   416  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   417  00F8  0826               	movf	(?___wmul+1)^(0+128),w
   418  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   419  00FA  00EE               	movwf	110
   420  00FB  1683               	bsf	3,5	;RP0=1, select bank1
   421  00FC  0825               	movf	?___wmul^(0+128),w
   422  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   423  00FE  00ED               	movwf	109
   424                           ;c684.c: 189: derivative_term = derivative_term
      +                           >> 5;
   425  00FF  3005               	movlw	5
   426  0100  1683               	bsf	3,5	;RP0=1, select bank1
   427  0101  00A0               	movwf	??_PID^(0+128)
   428  0102                     u2105:
   429  0102  1283               	bcf	3,5	;RP0=0, select bank0
   430  0103  0D6E               	rlf	110,w
   431  0104  0CEE               	rrf	110,f
   432  0105  0CED               	rrf	109,f
   433  0106  1683               	bsf	3,5	;RP0=1, select bank1
   434  0107  0BA0               	decfsz	??_PID^(0+128),f
   435  0108  2902               	goto	u2105
   436                           ;c684.c: 191: if(derivative_term > 120){
   437  0109  1283               	bcf	3,5	;RP0=0, select bank0
   438  010A  086E               	movf	110,w
   439  010B  3A80               	xorlw	128
   440  010C  1683               	bsf	3,5	;RP0=1, select bank1
   441  010D  00A0               	movwf	??_PID^(0+128)
   442  010E  3080               	movlw	128
   443  010F  0220               	subwf	??_PID^(0+128),w
   444  0110  1D03               	btfss	3,2
   445  0111  2915               	goto	u21110
   446  0112  3079               	movlw	121
   447  0113  1283               	bcf	3,5	;RP0=0, select bank0
   448  0114  026D               	subwf	109,w
   449  0115                     u21110:
   450  0115  1683               	bsf	3,5	;RP0=1, select bank1
   451  0116  1C03               	btfss	3,0
   452  0117  291C               	goto	l35
   453                           ;c684.c: 192: derivative_term = 120;
   454  0118  3078               	movlw	120
   455  0119  1283               	bcf	3,5	;RP0=0, select bank0
   456  011A  00ED               	movwf	109
   457  011B  01EE               	clrf	110
   458  011C                     l35:
   459                           ;c684.c: 193: }
   460                           ;c684.c: 194: if(derivative_term < -120){
   461  011C  1283               	bcf	3,5	;RP0=0, select bank0
   462  011D  086E               	movf	110,w
   463  011E  3A80               	xorlw	128
   464  011F  1683               	bsf	3,5	;RP0=1, select bank1
   465  0120  00A0               	movwf	??_PID^(0+128)
   466  0121  307F               	movlw	127
   467  0122  0220               	subwf	??_PID^(0+128),w
   468  0123  1D03               	btfss	3,2
   469  0124  2928               	goto	u21210
   470  0125  3088               	movlw	136
   471  0126  1283               	bcf	3,5	;RP0=0, select bank0
   472  0127  026D               	subwf	109,w
   473  0128                     u21210:
   474  0128  1683               	bsf	3,5	;RP0=1, select bank1
   475  0129  1803               	btfsc	3,0
   476  012A  2930               	goto	l36
   477                           ;c684.c: 195: derivative_term = -120;
   478  012B  3088               	movlw	136
   479  012C  1283               	bcf	3,5	;RP0=0, select bank0
   480  012D  00ED               	movwf	109
   481  012E  30FF               	movlw	255
   482  012F  00EE               	movwf	110
   483  0130                     l36:
   484                           ;c684.c: 196: }
   485                           ;c684.c: 198: Cn = en0 + integral_term + deriva
      +                          tive_term;
   486  0130  1283               	bcf	3,5	;RP0=0, select bank0
   487  0131  086D               	movf	109,w
   488  0132  077B               	addwf	123,w
   489  0133  1683               	bsf	3,5	;RP0=1, select bank1
   490  0134  00A0               	movwf	??_PID^(0+128)
   491  0135  1283               	bcf	3,5	;RP0=0, select bank0
   492  0136  086E               	movf	110,w
   493  0137  1803               	btfsc	3,0
   494  0138  0A6E               	incf	110,w
   495  0139  1BFB               	btfsc	123,7
   496  013A  3EFF               	addlw	255
   497  013B  1683               	bsf	3,5	;RP0=1, select bank1
   498  013C  00A1               	movwf	(??_PID^(0+128)+1)
   499  013D  1283               	bcf	3,5	;RP0=0, select bank0
   500  013E  0861               	movf	97,w
   501  013F  1683               	bsf	3,5	;RP0=1, select bank1
   502  0140  0720               	addwf	??_PID^(0+128),w
   503  0141  1283               	bcf	3,5	;RP0=0, select bank0
   504  0142  00E7               	movwf	103
   505  0143  0862               	movf	98,w
   506  0144  1803               	btfsc	3,0
   507  0145  0A62               	incf	98,w
   508  0146  1683               	bsf	3,5	;RP0=1, select bank1
   509  0147  0721               	addwf	(??_PID+1)^(0+128),w
   510  0148  1283               	bcf	3,5	;RP0=0, select bank0
   511  0149  00E8               	movwf	104
   512  014A  01E9               	clrf	105
   513  014B  1BE8               	btfsc	104,7
   514  014C  03E9               	decf	105,f
   515  014D  0869               	movf	105,w
   516  014E  00EA               	movwf	106
   517                           ;c684.c: 199: Cn = Cn * kp / 1024;
   518  014F  1683               	bsf	3,5	;RP0=1, select bank1
   519  0150  1283               	bcf	3,5	;RP0=0, select bank0
   520  0151  1683               	bsf	3,5	;RP0=1, select bank1
   521  0152  00AC               	movwf	(?___lmul+7)& (0+127)
   522  0153  1283               	bcf	3,5	;RP0=0, select bank0
   523  0154  0869               	movf	105,w
   524  0155  1683               	bsf	3,5	;RP0=1, select bank1
   525  0156  00AB               	movwf	(?___lmul+6)& (0+127)
   526  0157  1283               	bcf	3,5	;RP0=0, select bank0
   527  0158  0868               	movf	104,w
   528  0159  1683               	bsf	3,5	;RP0=1, select bank1
   529  015A  00AA               	movwf	(?___lmul+5)& (0+127)
   530  015B  1283               	bcf	3,5	;RP0=0, select bank0
   531  015C  0867               	movf	103,w
   532  015D  1683               	bsf	3,5	;RP0=1, select bank1
   533  015E  00A9               	movwf	(?___lmul+4)& (0+127)
   534  015F  1283               	bcf	3,5	;RP0=0, select bank0
   535  0160  0870               	movf	112,w
   536  0161  1683               	bsf	3,5	;RP0=1, select bank1
   537  0162  00A5               	movwf	?___lmul^(0+128)
   538  0163  1283               	bcf	3,5	;RP0=0, select bank0
   539  0164  0871               	movf	113,w
   540  0165  1683               	bsf	3,5	;RP0=1, select bank1
   541  0166  00A6               	movwf	(?___lmul^(0+128)+1)
   542  0167  01A7               	clrf	(?___lmul+2)^(0+128)
   543  0168  01A8               	clrf	(?___lmul+3)^(0+128)
   544  0169  24AD               	fcall	___lmul
   545  016A  0828               	movf	(?___lmul+3)^(0+128),w
   546  016B  00A8               	movwf	(?___aldiv+3)^(0+128)
   547  016C  0827               	movf	(?___lmul+2)^(0+128),w
   548  016D  00A7               	movwf	(?___aldiv+2)^(0+128)
   549  016E  0826               	movf	(?___lmul+1)^(0+128),w
   550  016F  00A6               	movwf	(?___aldiv+1)^(0+128)
   551  0170  0825               	movf	?___lmul^(0+128),w
   552  0171  00A5               	movwf	?___aldiv^(0+128)
   553  0172  01AC               	clrf	(?___aldiv+7)& (0+127)
   554  0173  01AB               	clrf	(?___aldiv+6)& (0+127)
   555  0174  3004               	movlw	4
   556  0175  00AA               	movwf	(?___aldiv+5)& (0+127)
   557  0176  3000               	movlw	0
   558  0177  01A9               	clrf	(?___aldiv+4)& (0+127)
   559  0178  22FE               	fcall	___aldiv
   560  0179  1283               	bcf	3,5	;RP0=0, select bank0
   561  017A  1683               	bsf	3,5	;RP0=1, select bank1
   562  017B  0828               	movf	(?___aldiv+3)^(0+128),w
   563  017C  1283               	bcf	3,5	;RP0=0, select bank0
   564  017D  00EA               	movwf	106
   565  017E  1683               	bsf	3,5	;RP0=1, select bank1
   566  017F  0827               	movf	(?___aldiv+2)^(0+128),w
   567  0180  1283               	bcf	3,5	;RP0=0, select bank0
   568  0181  00E9               	movwf	105
   569  0182  1683               	bsf	3,5	;RP0=1, select bank1
   570  0183  0826               	movf	(?___aldiv+1)^(0+128),w
   571  0184  1283               	bcf	3,5	;RP0=0, select bank0
   572  0185  00E8               	movwf	104
   573  0186  1683               	bsf	3,5	;RP0=1, select bank1
   574  0187  0825               	movf	?___aldiv^(0+128),w
   575  0188  1283               	bcf	3,5	;RP0=0, select bank0
   576  0189  00E7               	movwf	103
   577                           ;c684.c: 201: if(Cn >= 1000)
   578  018A  086A               	movf	106,w
   579  018B  3A80               	xorlw	128
   580  018C  1683               	bsf	3,5	;RP0=1, select bank1
   581  018D  00A0               	movwf	??_PID^(0+128)
   582  018E  3080               	movlw	128
   583  018F  0220               	subwf	??_PID^(0+128),w
   584  0190  1D03               	btfss	3,2
   585  0191  299D               	goto	u2134
   586  0192  3000               	movlw	0
   587  0193  1283               	bcf	3,5	;RP0=0, select bank0
   588  0194  0269               	subwf	105,w
   589  0195  1D03               	btfss	3,2
   590  0196  299D               	goto	u2134
   591  0197  3003               	movlw	3
   592  0198  0268               	subwf	104,w
   593  0199  1D03               	btfss	3,2
   594  019A  299D               	goto	u2134
   595  019B  30E8               	movlw	232
   596  019C  0267               	subwf	103,w
   597  019D                     u2134:
   598  019D  1683               	bsf	3,5	;RP0=1, select bank1
   599                           ;c684.c: 202: {
   600                           ;c684.c: 203: Cn = 1000;
   601  019E  1283               	bcf	3,5	;RP0=0, select bank0
   602  019F  1C03               	btfss	3,0
   603  01A0  29A7               	goto	L3
   604  01A1  01EA               	clrf	106
   605  01A2  01E9               	clrf	105
   606  01A3  3003               	movlw	3
   607  01A4  00E8               	movwf	104
   608  01A5  30E8               	movlw	232
   609  01A6  00E7               	movwf	103
   610                           ;c684.c: 204: }
   611                           ;c684.c: 205: if(Cn <= -1000)
   612  01A7                     L3:
   613  01A7  086A               	movf	106,w
   614  01A8  3A80               	xorlw	128
   615  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   616  01AA  00A0               	movwf	??_PID^(0+128)
   617  01AB  307F               	movlw	127
   618  01AC  0220               	subwf	??_PID^(0+128),w
   619  01AD  1D03               	btfss	3,2
   620  01AE  29BA               	goto	u2144
   621  01AF  30FF               	movlw	255
   622  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   623  01B1  0269               	subwf	105,w
   624  01B2  1D03               	btfss	3,2
   625  01B3  29BA               	goto	u2144
   626  01B4  30FC               	movlw	252
   627  01B5  0268               	subwf	104,w
   628  01B6  1D03               	btfss	3,2
   629  01B7  29BA               	goto	u2144
   630  01B8  3019               	movlw	25
   631  01B9  0267               	subwf	103,w
   632  01BA                     u2144:
   633  01BA  1683               	bsf	3,5	;RP0=1, select bank1
   634                           ;c684.c: 206: {
   635                           ;c684.c: 207: Cn = -1000;
   636  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   637  01BC  1803               	btfsc	3,0
   638  01BD  29C5               	goto	L4
   639  01BE  30FF               	movlw	255
   640  01BF  00EA               	movwf	106
   641  01C0  00E9               	movwf	105
   642  01C1  30FC               	movlw	252
   643  01C2  00E8               	movwf	104
   644  01C3  3018               	movlw	24
   645  01C4  00E7               	movwf	103
   646                           ;c684.c: 208: }
   647                           ;c684.c: 209: if(Cn == 0){
   648  01C5                     L4:
   649  01C5  086A               	movf	106,w
   650  01C6  0469               	iorwf	105,w
   651  01C7  0468               	iorwf	104,w
   652  01C8  0467               	iorwf	103,w
   653  01C9  1D03               	btfss	3,2
   654  01CA  29CE               	goto	l39
   655                           ;c684.c: 211: DC1B1 = DC1B1 = 0;
   656  01CB  1295               	bcf	21,5
   657  01CC  1295               	bcf	21,5
   658                           ;c684.c: 212: CCPR1L = 0;
   659  01CD  0193               	clrf	19	;volatile
   660  01CE                     l39:
   661                           ;c684.c: 213: }
   662                           ;c684.c: 214: if(Cn > 0){
   663  01CE  086A               	movf	106,w
   664  01CF  3A80               	xorlw	128
   665  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   666  01D1  00A0               	movwf	??_PID^(0+128)
   667  01D2  3080               	movlw	128
   668  01D3  0220               	subwf	??_PID^(0+128),w
   669  01D4  1D03               	btfss	3,2
   670  01D5  29E1               	goto	u2164
   671  01D6  3000               	movlw	0
   672  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   673  01D8  0269               	subwf	105,w
   674  01D9  1D03               	btfss	3,2
   675  01DA  29E1               	goto	u2164
   676  01DB  3000               	movlw	0
   677  01DC  0268               	subwf	104,w
   678  01DD  1D03               	btfss	3,2
   679  01DE  29E1               	goto	u2164
   680  01DF  3001               	movlw	1
   681  01E0  0267               	subwf	103,w
   682  01E1                     u2164:
   683  01E1  1683               	bsf	3,5	;RP0=1, select bank1
   684                           ;c684.c: 215: P1M1 = 0;
   685  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   686  01E3  1C03               	btfss	3,0
   687  01E4  2A18               	goto	L5
   688  01E5  1395               	bcf	21,7
   689                           ;c684.c: 216: temp = Cn;
   690  01E6  0867               	movf	103,w
   691  01E7  00F2               	movwf	114
   692                           ;c684.c: 217: if(temp^0b00000001){
   693  01E8  3A01               	xorlw	1
   694  01E9  1903               	btfsc	3,2
   695  01EA  29ED               	goto	l41
   696                           ;c684.c: 218: DC1B0 = 1;
   697  01EB  1615               	bsf	21,4
   698                           ;c684.c: 219: }
   699  01EC  29EE               	goto	l42
   700  01ED                     l41:
   701                           ;c684.c: 220: else{
   702                           ;c684.c: 221: DC1B0 = 0;
   703  01ED  1215               	bcf	21,4
   704  01EE                     l42:
   705                           ;c684.c: 222: }
   706                           ;c684.c: 223: if(temp^0b00000010){
   707  01EE  0872               	movf	114,w
   708  01EF  3A02               	xorlw	2
   709  01F0  1903               	btfsc	3,2
   710  01F1  29F4               	goto	l43
   711                           ;c684.c: 224: DC1B1 = 1;
   712  01F2  1695               	bsf	21,5
   713                           ;c684.c: 225: }
   714  01F3  29F5               	goto	l44
   715  01F4                     l43:
   716                           ;c684.c: 226: else{
   717                           ;c684.c: 227: DC1B1 = 0;
   718  01F4  1295               	bcf	21,5
   719  01F5                     l44:
   720                           ;c684.c: 228: }
   721                           ;c684.c: 229: CCPR1L = Cn >> 2;
   722  01F5  0867               	movf	103,w
   723  01F6  1683               	bsf	3,5	;RP0=1, select bank1
   724  01F7  00A0               	movwf	??_PID^(0+128)
   725  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   726  01F9  0868               	movf	104,w
   727  01FA  1683               	bsf	3,5	;RP0=1, select bank1
   728  01FB  00A1               	movwf	(??_PID+1)^(0+128)
   729  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   730  01FD  0869               	movf	105,w
   731  01FE  1683               	bsf	3,5	;RP0=1, select bank1
   732  01FF  00A2               	movwf	(??_PID+2)^(0+128)
   733  0200  1283               	bcf	3,5	;RP0=0, select bank0
   734  0201  086A               	movf	106,w
   735  0202  1683               	bsf	3,5	;RP0=1, select bank1
   736  0203  00A3               	movwf	(??_PID+3)^(0+128)
   737  0204  3002               	movlw	2
   738  0205  00A4               	movwf	(??_PID+4)^(0+128)
   739  0206                     u2195:
   740  0206  0D23               	rlf	(??_PID+3)^(0+128),w
   741  0207  0CA3               	rrf	(??_PID+3)^(0+128),f
   742  0208  0CA2               	rrf	(??_PID+2)^(0+128),f
   743  0209  0CA1               	rrf	(??_PID+1)^(0+128),f
   744  020A  0CA0               	rrf	??_PID^(0+128),f
   745  020B  0BA4               	decfsz	(??_PID+4)^(0+128),f
   746  020C  2A06               	goto	u2195
   747  020D  0820               	movf	??_PID^(0+128),w
   748  020E  1283               	bcf	3,5	;RP0=0, select bank0
   749  020F  0093               	movwf	19	;volatile
   750                           ;c684.c: 230: off_set = off_set +1;
   751  0210  0AF8               	incf	120,f
   752                           ;c684.c: 231: if(off_set > 55){
   753  0211  0878               	movf	120,w
   754  0212  3A80               	xorlw	128
   755  0213  3E48               	addlw	-184
   756  0214  1C03               	btfss	3,0
   757  0215  2A52               	goto	l46
   758                           ;c684.c: 232: off_set = 55;
   759  0216  3037               	movlw	55
   760  0217  2A51               	goto	L1
   761                           ;c684.c: 233: }
   762                           ;c684.c: 234: }
   763                           ;c684.c: 236: else {
   764                           ;c684.c: 237: P1M1 = 1;
   765  0218                     L5:
   766  0218  1795               	bsf	21,7
   767                           ;c684.c: 238: temp_int = abs(Cn);
   768  0219  1683               	bsf	3,5	;RP0=1, select bank1
   769  021A  1283               	bcf	3,5	;RP0=0, select bank0
   770  021B  0868               	movf	104,w
   771  021C  1683               	bsf	3,5	;RP0=1, select bank1
   772  021D  00A6               	movwf	(?_abs+1)^(0+128)
   773  021E  1283               	bcf	3,5	;RP0=0, select bank0
   774  021F  0867               	movf	103,w
   775  0220  1683               	bsf	3,5	;RP0=1, select bank1
   776  0221  00A5               	movwf	?_abs^(0+128)
   777  0222  24F9               	fcall	_abs
   778  0223  1283               	bcf	3,5	;RP0=0, select bank0
   779  0224  1683               	bsf	3,5	;RP0=1, select bank1
   780  0225  0826               	movf	(?_abs+1)^(0+128),w
   781  0226  1283               	bcf	3,5	;RP0=0, select bank0
   782  0227  00FA               	movwf	122
   783  0228  1683               	bsf	3,5	;RP0=1, select bank1
   784  0229  0825               	movf	?_abs^(0+128),w
   785  022A  1283               	bcf	3,5	;RP0=0, select bank0
   786  022B  00F9               	movwf	121
   787                           ;c684.c: 239: temp = temp_int;
   788  022C  00F2               	movwf	114
   789                           ;c684.c: 240: if(temp^0b00000001){
   790  022D  3A01               	xorlw	1
   791  022E  1903               	btfsc	3,2
   792  022F  2A32               	goto	l47
   793                           ;c684.c: 241: DC1B0 = 1;
   794  0230  1615               	bsf	21,4
   795                           ;c684.c: 242: }
   796  0231  2A33               	goto	l48
   797  0232                     l47:
   798                           ;c684.c: 243: else{
   799                           ;c684.c: 244: DC1B0 = 0;
   800  0232  1215               	bcf	21,4
   801  0233                     l48:
   802                           ;c684.c: 245: }
   803                           ;c684.c: 246: if(temp^0b00000010){
   804  0233  0872               	movf	114,w
   805  0234  3A02               	xorlw	2
   806  0235  1903               	btfsc	3,2
   807  0236  2A39               	goto	l49
   808                           ;c684.c: 247: DC1B1 = 1;
   809  0237  1695               	bsf	21,5
   810                           ;c684.c: 248: }
   811  0238  2A3A               	goto	l50
   812  0239                     l49:
   813                           ;c684.c: 249: else{
   814                           ;c684.c: 250: DC1B1 = 0;
   815  0239  1295               	bcf	21,5
   816  023A                     l50:
   817                           ;c684.c: 251: }
   818                           ;c684.c: 252: CCPR1L = temp_int >> 2;
   819  023A  087A               	movf	122,w
   820  023B  1683               	bsf	3,5	;RP0=1, select bank1
   821  023C  00A1               	movwf	(??_PID+1)^(0+128)
   822  023D  1283               	bcf	3,5	;RP0=0, select bank0
   823  023E  0879               	movf	121,w
   824  023F  1683               	bsf	3,5	;RP0=1, select bank1
   825  0240  00A0               	movwf	??_PID^(0+128)
   826  0241  0D21               	rlf	(??_PID+1)^(0+128),w
   827  0242  0CA1               	rrf	(??_PID+1)^(0+128),f
   828  0243  0CA0               	rrf	??_PID^(0+128),f
   829  0244  0D21               	rlf	(??_PID+1)^(0+128),w
   830  0245  0CA1               	rrf	(??_PID+1)^(0+128),f
   831  0246  0CA0               	rrf	??_PID^(0+128),f
   832  0247  0820               	movf	??_PID^(0+128),w
   833  0248  1283               	bcf	3,5	;RP0=0, select bank0
   834  0249  0093               	movwf	19	;volatile
   835                           ;c684.c: 253: off_set = off_set -1;
   836  024A  03F8               	decf	120,f
   837                           ;c684.c: 254: if(off_set < -55){
   838  024B  0878               	movf	120,w
   839  024C  3A80               	xorlw	128
   840  024D  3EB7               	addlw	183
   841  024E  1803               	btfsc	3,0
   842  024F  2A52               	goto	l46
   843                           ;c684.c: 255: off_set = -55;
   844  0250  30C9               	movlw	-55
   845  0251                     L1:
   846  0251  00F8               	movwf	120
   847  0252                     l46:
   848                           ;c684.c: 256: }
   849                           ;c684.c: 257: }
   850                           ;c684.c: 258: en3 = en2;
   851  0252  086F               	movf	111,w
   852  0253  00F7               	movwf	119
   853                           ;c684.c: 259: en2 = en1;
   854  0254  087C               	movf	124,w
   855  0255  00EF               	movwf	111
   856                           ;c684.c: 260: en1 = en0;
   857  0256  087B               	movf	123,w
   858  0257  00FC               	movwf	124
   859                           ;c684.c: 261: en0 = 0;
   860  0258  01FB               	clrf	123
   861                           ;c684.c: 263: do_PID = 0;
   862  0259  107D               	bcf	125,0
   863                           ;c684.c: 265: RA4 = 0;
   864  025A  1205               	bcf	5,4
   865                           ;c684.c: 268: }
   866  025B  0008               	return
   867                           ; =============== function _PID ends ==========
      +                          =====
   868  025C                     __end_of_PID:
   869                           
   870                           	psect	text94
   871                           ; *************** function _Constantes ********
      +                          *******
   872                           ; Defined at:
   873                           ;		line 95 in file "C:\Users\Jorge Aguilar\Docu
      +                          ments\PROGRAMACION\SEGWAY Jhons\16f684\c684.c"
   874                           ; Parameters:
   875                           ;		None
   876                           ; Auto variables:
   877                           ;		None
   878                           ; Return value:
   879                           ;		type: void 
   880                           ;		size: 0
   881                           ; Registers used:
   882                           ;		wreg, status,2, status,0
   883                           ; Tracked objects:
   884                           ;		On entry : BFF/0
   885                           ;		On exit  : BFF/0
   886                           ;		Unchanged: FFFFFEFF/0
   887                           ; Data sizes:
   888                           ;		Autos:    0
   889                           ;		Params:   0
   890                           ;		Temp:     0
   891                           ;		Total:    0
   892                           ; This function calls:
   893                           ;		Nothing
   894                           ; This function is called by:
   895                           ;		_main
   896                           ; This function uses a non-reentrant model
   897                           ; 
   898                           ;c684.c: 94: void Constantes()
   899                           ;c684.c: 95: {
   900  03D4                     _Constantes:
   901                           ; Regs used in _Constantes: [wreg+status,2+stat
      +                          us,0]
   902                           ;c684.c: 97: ANS2 = 1;
   903  03D4  1683               	bsf	3,5	;RP0=1, select bank1
   904  03D5  1511               	bsf	17,2
   905                           ;c684.c: 98: ANS4 = 1;
   906  03D6  1611               	bsf	17,4
   907                           ;c684.c: 99: ANS5 = 1;
   908  03D7  1691               	bsf	17,5
   909                           ;c684.c: 101: ADFM = 1;
   910  03D8  1283               	bcf	3,5	;RP0=0, select bank0
   911  03D9  179F               	bsf	31,7
   912                           ;c684.c: 104: CHS0 = 0;
   913  03DA  111F               	bcf	31,2
   914                           ;c684.c: 105: CHS1 = 0;
   915  03DB  119F               	bcf	31,3
   916                           ;c684.c: 106: CHS2 = 1;
   917  03DC  161F               	bsf	31,4
   918                           ;c684.c: 109: temp = 200;
   919  03DD  30C8               	movlw	200
   920  03DE  00F2               	movwf	114
   921                           ;c684.c: 110: while(temp){
   922  03DF  2BE1               	goto	l12
   923  03E0                     l13:
   924                           ;c684.c: 111: temp--;
   925  03E0  03F2               	decf	114,f
   926  03E1                     l12:
   927  03E1  08F2               	movf	114,f
   928  03E2  1D03               	btfss	3,2
   929  03E3  2BE0               	goto	l13
   930                           ;c684.c: 112: }
   931                           ;c684.c: 114: GODONE = 1;
   932  03E4  149F               	bsf	31,1
   933                           ;c684.c: 115: while(GODONE);{
   934  03E5                     l15:
   935  03E5  189F               	btfsc	31,1
   936  03E6  2BE5               	goto	l15
   937                           ;c684.c: 116: temp = 0;
   938  03E7  01F2               	clrf	114
   939                           ;c684.c: 117: }
   940                           ;c684.c: 118: ki = ADRESH << 8;
   941  03E8  081E               	movf	30,w	;volatile
   942  03E9  00E6               	movwf	102
   943  03EA  01E5               	clrf	101
   944                           ;c684.c: 119: ki = ki + ADRESL;
   945  03EB  1683               	bsf	3,5	;RP0=1, select bank1
   946  03EC  081E               	movf	30,w	;volatile
   947  03ED  1283               	bcf	3,5	;RP0=0, select bank0
   948  03EE  07E5               	addwf	101,f
   949  03EF  1803               	btfsc	3,0
   950  03F0  0AE6               	incf	102,f
   951                           ;c684.c: 122: CHS0 = 1;
   952  03F1  151F               	bsf	31,2
   953                           ;c684.c: 123: CHS1 = 0;
   954  03F2  119F               	bcf	31,3
   955                           ;c684.c: 124: CHS2 = 1;
   956  03F3  161F               	bsf	31,4
   957                           ;c684.c: 127: temp = 200;
   958  03F4  30C8               	movlw	200
   959  03F5  00F2               	movwf	114
   960                           ;c684.c: 128: while(temp){
   961  03F6                     l18:
   962  03F6  08F2               	movf	114,f
   963  03F7  1903               	btfsc	3,2
   964  03F8  2BFB               	goto	l20
   965                           ;c684.c: 129: temp--;
   966  03F9  03F2               	decf	114,f
   967  03FA  2BF6               	goto	l18
   968  03FB                     l20:
   969                           ;c684.c: 130: }
   970                           ;c684.c: 132: GODONE = 1;
   971  03FB  149F               	bsf	31,1
   972                           ;c684.c: 133: while(GODONE);{
   973  03FC                     l21:
   974  03FC  189F               	btfsc	31,1
   975  03FD  2BFC               	goto	l21
   976                           ;c684.c: 134: temp = 0;
   977  03FE  01F2               	clrf	114
   978                           ;c684.c: 135: }
   979                           ;c684.c: 136: kd = ADRESH << 8;
   980  03FF  081E               	movf	30,w	;volatile
   981  0400  00E4               	movwf	100
   982  0401  01E3               	clrf	99
   983                           ;c684.c: 137: kd = kd + ADRESL;
   984  0402  1683               	bsf	3,5	;RP0=1, select bank1
   985  0403  081E               	movf	30,w	;volatile
   986  0404  1283               	bcf	3,5	;RP0=0, select bank0
   987  0405  07E3               	addwf	99,f
   988  0406  1803               	btfsc	3,0
   989  0407  0AE4               	incf	100,f
   990                           ;c684.c: 140: CHS0 = 0;
   991  0408  111F               	bcf	31,2
   992                           ;c684.c: 141: CHS1 = 1;
   993  0409  159F               	bsf	31,3
   994                           ;c684.c: 142: CHS2 = 0;
   995  040A  121F               	bcf	31,4
   996                           ;c684.c: 145: temp = 200;
   997  040B  30C8               	movlw	200
   998  040C  00F2               	movwf	114
   999                           ;c684.c: 146: while(temp){
  1000  040D                     l24:
  1001  040D  08F2               	movf	114,f
  1002  040E  1903               	btfsc	3,2
  1003  040F  2C12               	goto	l26
  1004                           ;c684.c: 147: temp--;
  1005  0410  03F2               	decf	114,f
  1006  0411  2C0D               	goto	l24
  1007  0412                     l26:
  1008                           ;c684.c: 148: }
  1009                           ;c684.c: 150: GODONE = 1;
  1010  0412  149F               	bsf	31,1
  1011                           ;c684.c: 151: while(GODONE);{
  1012  0413                     l27:
  1013  0413  189F               	btfsc	31,1
  1014  0414  2C13               	goto	l27
  1015                           ;c684.c: 152: temp = 0;
  1016  0415  01F2               	clrf	114
  1017                           ;c684.c: 153: }
  1018                           ;c684.c: 154: kp = ADRESH << 8;
  1019  0416  081E               	movf	30,w	;volatile
  1020  0417  00F1               	movwf	113
  1021  0418  01F0               	clrf	112
  1022                           ;c684.c: 155: kp = kp + ADRESL;
  1023  0419  1683               	bsf	3,5	;RP0=1, select bank1
  1024  041A  081E               	movf	30,w	;volatile
  1025  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1026  041C  07F0               	addwf	112,f
  1027  041D  1803               	btfsc	3,0
  1028  041E  0AF1               	incf	113,f
  1029                           ;c684.c: 158: CHS0 = 0;
  1030  041F  111F               	bcf	31,2
  1031                           ;c684.c: 159: CHS1 = 0;
  1032  0420  119F               	bcf	31,3
  1033                           ;c684.c: 160: CHS2 = 0;
  1034  0421  121F               	bcf	31,4
  1035                           ;c684.c: 161: }
  1036  0422  0008               	return
  1037                           ; =============== function _Constantes ends ===
      +                          ============
  1038  0423                     __end_of_Constantes:
  1039                           
  1040                           	psect	text95
  1041                           ; *************** function _Inicializa ********
      +                          *******
  1042                           ; Defined at:
  1043                           ;		line 31 in file "C:\Users\Jorge Aguilar\Docu
      +                          ments\PROGRAMACION\SEGWAY Jhons\16f684\c684.c"
  1044                           ; Parameters:
  1045                           ;		None
  1046                           ; Auto variables:
  1047                           ;		None
  1048                           ; Return value:
  1049                           ;		type: void 
  1050                           ;		size: 0
  1051                           ; Registers used:
  1052                           ;		wreg, status,2, status,0
  1053                           ; Tracked objects:
  1054                           ;		On entry : BFF/0
  1055                           ;		On exit  : BFF/0
  1056                           ;		Unchanged: FFFFFEFF/0
  1057                           ; Data sizes:
  1058                           ;		Autos:    0
  1059                           ;		Params:   0
  1060                           ;		Temp:     1
  1061                           ;		Total:    1
  1062                           ; This function calls:
  1063                           ;		Nothing
  1064                           ; This function is called by:
  1065                           ;		_main
  1066                           ; This function uses a non-reentrant model
  1067                           ; 
  1068                           ;c684.c: 30: void Inicializa()
  1069                           ;c684.c: 31: {
  1070  0373                     _Inicializa:
  1071                           ; Regs used in _Inicializa: [wreg+status,2+stat
      +                          us,0]
  1072                           ;c684.c: 33: PORTA = 0;
  1073  0373  0185               	clrf	5	;volatile
  1074                           ;c684.c: 34: TRISA = 0b00101101;
  1075  0374  302D               	movlw	45
  1076  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0376  0085               	movwf	5	;volatile
  1078                           ;c684.c: 35: PORTC = 0;
  1079  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0378  0187               	clrf	7	;volatile
  1081                           ;c684.c: 36: TRISC = 0b00000011;
  1082  0379  3003               	movlw	3
  1083  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1084  037B  0087               	movwf	7	;volatile
  1085                           ;c684.c: 38: CMCON0 = 0x07;
  1086  037C  3007               	movlw	7
  1087  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1088  037E  0099               	movwf	25	;volatile
  1089                           ;c684.c: 40: IRCF0 = 1;
  1090  037F  1683               	bsf	3,5	;RP0=1, select bank1
  1091  0380  160F               	bsf	15,4
  1092                           ;c684.c: 41: IRCF1 = 1;
  1093  0381  168F               	bsf	15,5
  1094                           ;c684.c: 42: IRCF2 = 1;
  1095  0382  170F               	bsf	15,6
  1096                           ;c684.c: 44: CCP1CON = 0b01001100;
  1097  0383  304C               	movlw	76
  1098  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0385  0095               	movwf	21	;volatile
  1100                           ;c684.c: 45: ECCPAS = 0;
  1101  0386  0197               	clrf	23	;volatile
  1102                           ;c684.c: 46: PR2 = 0x3F;
  1103  0387  303F               	movlw	63
  1104  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0389  0092               	movwf	18
  1106                           ;c684.c: 47: T2CON = 0;
  1107  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  038B  0192               	clrf	18	;volatile
  1109                           ;c684.c: 48: CCPR1L = 0;
  1110  038C  0193               	clrf	19	;volatile
  1111                           ;c684.c: 49: TMR2ON = 1;
  1112  038D  1512               	bsf	18,2
  1113                           ;c684.c: 51: ANSEL = 0b00110101;
  1114  038E  3035               	movlw	53
  1115  038F  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0390  0091               	movwf	17
  1117                           ;c684.c: 57: VCFG = 0;
  1118  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0392  131F               	bcf	31,6
  1120                           ;c684.c: 58: ADFM = 1;
  1121  0393  179F               	bsf	31,7
  1122                           ;c684.c: 60: ADCS0 = 1;
  1123  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1124  0395  161F               	bsf	31,4
  1125                           ;c684.c: 61: ADCS1 = 0;
  1126  0396  129F               	bcf	31,5
  1127                           ;c684.c: 62: ADCS2 = 1;
  1128  0397  171F               	bsf	31,6
  1129                           ;c684.c: 64: CHS0 = 0;
  1130  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0399  111F               	bcf	31,2
  1132                           ;c684.c: 65: CHS1 = 0;
  1133  039A  119F               	bcf	31,3
  1134                           ;c684.c: 66: CHS2 = 0;
  1135  039B  121F               	bcf	31,4
  1136                           ;c684.c: 68: ADON = 1;
  1137  039C  141F               	bsf	31,0
  1138                           ;c684.c: 70: en0=en1=en2=en3=0;
  1139  039D  01F7               	clrf	119
  1140  039E  01EF               	clrf	111
  1141  039F  01FC               	clrf	124
  1142  03A0  01FB               	clrf	123
  1143                           ;c684.c: 71: ki=kd=0;
  1144  03A1  01E3               	clrf	99
  1145  03A2  01E4               	clrf	100
  1146  03A3  01E5               	clrf	101
  1147  03A4  01E6               	clrf	102
  1148                           ;c684.c: 72: kp=off_set=0;
  1149  03A5  01F8               	clrf	120
  1150  03A6  01F0               	clrf	112
  1151  03A7  01F1               	clrf	113
  1152  03A8  1BF0               	btfsc	112,7
  1153  03A9  03F1               	decf	113,f
  1154                           ;c684.c: 73: temp_int=integral_term=derivative_
      +                          term=0;
  1155  03AA  01ED               	clrf	109
  1156  03AB  01EE               	clrf	110
  1157  03AC  01E1               	clrf	97
  1158  03AD  01E2               	clrf	98
  1159  03AE  01F9               	clrf	121
  1160  03AF  01FA               	clrf	122
  1161                           ;c684.c: 74: SumE_Max=30000;
  1162  03B0  3030               	movlw	48
  1163  03B1  00F3               	movwf	115
  1164  03B2  3075               	movlw	117
  1165  03B3  00F4               	movwf	116
  1166                           ;c684.c: 75: SumE_Min=1-SumE_Max;
  1167  03B4  3001               	movlw	1
  1168  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  1169  03B6  00A0               	movwf	??_Inicializa^(0+128)
  1170  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1171  03B8  0873               	movf	115,w
  1172  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1173  03BA  0220               	subwf	??_Inicializa^(0+128),w
  1174  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1175  03BC  00F5               	movwf	117
  1176  03BD  0974               	comf	116,w
  1177  03BE  1803               	btfsc	3,0
  1178  03BF  3E01               	addlw	1
  1179  03C0  00F6               	movwf	118
  1180                           ;c684.c: 77: do_PID = 1;
  1181  03C1  147D               	bsf	125,0
  1182                           ;c684.c: 78: T0CS = 0;
  1183  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1184  03C3  1281               	bcf	1,5
  1185                           ;c684.c: 79: TMR0 = 10;
  1186  03C4  300A               	movlw	10
  1187  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1188  03C6  0081               	movwf	1	;volatile
  1189                           ;c684.c: 81: PSA = 0;
  1190  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1191  03C8  1181               	bcf	1,3
  1192                           ;c684.c: 82: PS0 = 0;
  1193  03C9  1001               	bcf	1,0
  1194                           ;c684.c: 83: PS1 = 0;
  1195  03CA  1081               	bcf	1,1
  1196                           ;c684.c: 84: PS2 = 1;
  1197  03CB  1501               	bsf	1,2
  1198                           ;c684.c: 86: INTCON = 0;
  1199  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1200  03CD  018B               	clrf	11	;volatile
  1201                           ;c684.c: 87: PIE1 = 0;
  1202  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1203  03CF  018C               	clrf	12
  1204                           ;c684.c: 88: T0IE = 1;
  1205  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1206  03D1  168B               	bsf	11,5
  1207                           ;c684.c: 89: GIE = 1;
  1208  03D2  178B               	bsf	11,7
  1209                           ;c684.c: 91: }
  1210  03D3  0008               	return
  1211                           ; =============== function _Inicializa ends ===
      +                          ============
  1212  03D4                     __end_of_Inicializa:
  1213                           
  1214                           	psect	text96
  1215                           ; *************** function ___aldiv ***********
      +                          ****
  1216                           ; Defined at:
  1217                           ;		line 5 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC\PRO\9.60\sources\aldiv.c"
  1218                           ; Parameters:
  1219                           ;		dividend    	offs:   0	type: long 
  1220                           ;		divisor     	offs:   4	type: long 
  1221                           ; Auto variables:
  1222                           ;		counter     	       	type: unsigned char 
  1223                           ;		sign        	       	type: unsigned char 
  1224                           ;		quotient    	       	type: long 
  1225                           ; Return value:
  1226                           ;		type: long 
  1227                           ;		size: 4
  1228                           ; Registers used:
  1229                           ;		wreg, status,2, status,0
  1230                           ; Tracked objects:
  1231                           ;		On entry : 100/100
  1232                           ;		On exit  : 100/100
  1233                           ;		Unchanged: FFFFFEFF/0
  1234                           ; Data sizes:
  1235                           ;		Autos:    6
  1236                           ;		Params:   8
  1237                           ;		Temp:     0
  1238                           ;		Total:   14
  1239                           ; This function calls:
  1240                           ; This function is called by:
  1241                           ;		_PID
  1242                           ; This function uses a non-reentrant model
  1243                           ; 
  1244  02FE                     ___aldiv:
  1245                           ; Regs used in ___aldiv: [wreg+status,2+status,
      +                          0]
  1246  02FE  01AD               	clrf	??___aldiv^(0+128)
  1247  02FF  1FAC               	btfss	(?___aldiv+7)^(0+128),7
  1248  0300  2B0E               	goto	l298
  1249  0301  09A9               	comf	(?___aldiv+4)^(0+128),f
  1250  0302  09AA               	comf	(?___aldiv+5)^(0+128),f
  1251  0303  09AB               	comf	(?___aldiv+6)^(0+128),f
  1252  0304  09AC               	comf	(?___aldiv+7)^(0+128),f
  1253  0305  0AA9               	incf	(?___aldiv+4)^(0+128),f
  1254  0306  1903               	btfsc	3,2
  1255  0307  0AAA               	incf	(?___aldiv+5)^(0+128),f
  1256  0308  1903               	btfsc	3,2
  1257  0309  0AAB               	incf	(?___aldiv+6)^(0+128),f
  1258  030A  1903               	btfsc	3,2
  1259  030B  0AAC               	incf	(?___aldiv+7)^(0+128),f
  1260  030C  01AD               	clrf	??___aldiv^(0+128)
  1261  030D  0AAD               	incf	??___aldiv^(0+128),f
  1262  030E                     l298:
  1263  030E  1FA8               	btfss	(?___aldiv+3)^(0+128),7
  1264  030F  2B1D               	goto	l299
  1265  0310  09A5               	comf	?___aldiv^(0+128),f
  1266  0311  09A6               	comf	(?___aldiv+1)^(0+128),f
  1267  0312  09A7               	comf	(?___aldiv+2)^(0+128),f
  1268  0313  09A8               	comf	(?___aldiv+3)^(0+128),f
  1269  0314  0AA5               	incf	?___aldiv^(0+128),f
  1270  0315  1903               	btfsc	3,2
  1271  0316  0AA6               	incf	(?___aldiv+1)^(0+128),f
  1272  0317  1903               	btfsc	3,2
  1273  0318  0AA7               	incf	(?___aldiv+2)^(0+128),f
  1274  0319  1903               	btfsc	3,2
  1275  031A  0AA8               	incf	(?___aldiv+3)^(0+128),f
  1276  031B  3001               	movlw	1
  1277  031C  06AD               	xorwf	??___aldiv^(0+128),f
  1278  031D                     l299:
  1279  031D  01AF               	clrf	(??___aldiv+2)^(0+128)
  1280  031E  01B0               	clrf	(??___aldiv+3)^(0+128)
  1281  031F  01B1               	clrf	(??___aldiv+4)^(0+128)
  1282  0320  01B2               	clrf	(??___aldiv+5)^(0+128)
  1283  0321  082C               	movf	(?___aldiv+7)^(0+128),w
  1284  0322  042B               	iorwf	(?___aldiv+6)^(0+128),w
  1285  0323  042A               	iorwf	(?___aldiv+5)^(0+128),w
  1286  0324  0429               	iorwf	(?___aldiv+4)^(0+128),w
  1287  0325  1903               	btfsc	3,2
  1288  0326  2B5C               	goto	l300
  1289  0327  01AE               	clrf	(??___aldiv+1)^(0+128)
  1290  0328                     L6:
  1291  0328  0AAE               	incf	(??___aldiv+1)^(0+128),f
  1292  0329  1003               	bcf	3,0
  1293  032A  1BAC               	btfsc	(?___aldiv+7)^(0+128),7
  1294  032B  2B32               	goto	L8
  1295  032C  0DA9               	rlf	(?___aldiv+4)^(0+128),f
  1296  032D  0DAA               	rlf	(?___aldiv+5)^(0+128),f
  1297  032E  0DAB               	rlf	(?___aldiv+6)^(0+128),f
  1298  032F  0DAC               	rlf	(?___aldiv+7)^(0+128),f
  1299  0330  2B28               	goto	L6
  1300  0331                     l306:
  1301  0331  1003               	bcf	3,0
  1302  0332                     L8:
  1303  0332  0DAF               	rlf	(??___aldiv+2)^(0+128),f
  1304  0333  0DB0               	rlf	(??___aldiv+3)^(0+128),f
  1305  0334  0DB1               	rlf	(??___aldiv+4)^(0+128),f
  1306  0335  0DB2               	rlf	(??___aldiv+5)^(0+128),f
  1307  0336  082C               	movf	(?___aldiv+7)^(0+128),w
  1308  0337  0228               	subwf	(?___aldiv+3)^(0+128),w
  1309  0338  1D03               	btfss	3,2
  1310  0339  2B44               	goto	u2285
  1311  033A  082B               	movf	(?___aldiv+6)^(0+128),w
  1312  033B  0227               	subwf	(?___aldiv+2)^(0+128),w
  1313  033C  1D03               	btfss	3,2
  1314  033D  2B44               	goto	u2285
  1315  033E  082A               	movf	(?___aldiv+5)^(0+128),w
  1316  033F  0226               	subwf	(?___aldiv+1)^(0+128),w
  1317  0340  1D03               	btfss	3,2
  1318  0341  2B44               	goto	u2285
  1319  0342  0829               	movf	(?___aldiv+4)^(0+128),w
  1320  0343  0225               	subwf	?___aldiv^(0+128),w
  1321  0344                     u2285:
  1322  0344  1C03               	btfss	3,0
  1323  0345  2B56               	goto	L7
  1324  0346  0829               	movf	(?___aldiv+4)^(0+128),w
  1325  0347  02A5               	subwf	?___aldiv^(0+128),f
  1326  0348  082A               	movf	(?___aldiv+5)^(0+128),w
  1327  0349  1C03               	btfss	3,0
  1328  034A  0F2A               	incfsz	(?___aldiv+5)^(0+128),w
  1329  034B  02A6               	subwf	(?___aldiv+1)^(0+128),f
  1330  034C  082B               	movf	(?___aldiv+6)^(0+128),w
  1331  034D  1C03               	btfss	3,0
  1332  034E  0F2B               	incfsz	(?___aldiv+6)^(0+128),w
  1333  034F  02A7               	subwf	(?___aldiv+2)^(0+128),f
  1334  0350  082C               	movf	(?___aldiv+7)^(0+128),w
  1335  0351  1C03               	btfss	3,0
  1336  0352  0F2C               	incfsz	(?___aldiv+7)^(0+128),w
  1337  0353  02A8               	subwf	(?___aldiv+3)^(0+128),f
  1338  0354  142F               	bsf	(??___aldiv+2)^(0+128),0
  1339  0355  1003               	bcf	3,0
  1340  0356                     L7:
  1341  0356  0CAC               	rrf	(?___aldiv+7)^(0+128),f
  1342  0357  0CAB               	rrf	(?___aldiv+6)^(0+128),f
  1343  0358  0CAA               	rrf	(?___aldiv+5)^(0+128),f
  1344  0359  0CA9               	rrf	(?___aldiv+4)^(0+128),f
  1345  035A  0BAE               	decfsz	(??___aldiv+1)^(0+128),f
  1346  035B  2B31               	goto	l306
  1347  035C                     l300:
  1348  035C  08AD               	movf	??___aldiv^(0+128),f
  1349  035D  1903               	btfsc	3,2
  1350  035E  2B6A               	goto	l308
  1351  035F  09AF               	comf	(??___aldiv+2)^(0+128),f
  1352  0360  09B0               	comf	(??___aldiv+3)^(0+128),f
  1353  0361  09B1               	comf	(??___aldiv+4)^(0+128),f
  1354  0362  09B2               	comf	(??___aldiv+5)^(0+128),f
  1355  0363  0AAF               	incf	(??___aldiv+2)^(0+128),f
  1356  0364  1903               	btfsc	3,2
  1357  0365  0AB0               	incf	(??___aldiv+3)^(0+128),f
  1358  0366  1903               	btfsc	3,2
  1359  0367  0AB1               	incf	(??___aldiv+4)^(0+128),f
  1360  0368  1903               	btfsc	3,2
  1361  0369  0AB2               	incf	(??___aldiv+5)^(0+128),f
  1362  036A                     l308:
  1363  036A  0832               	movf	(??___aldiv+5)^(0+128),w
  1364  036B  00A8               	movwf	(?___aldiv+3)^(0+128)
  1365  036C  0831               	movf	(??___aldiv+4)^(0+128),w
  1366  036D  00A7               	movwf	(?___aldiv+2)^(0+128)
  1367  036E  0830               	movf	(??___aldiv+3)^(0+128),w
  1368  036F  00A6               	movwf	(?___aldiv+1)^(0+128)
  1369  0370  082F               	movf	(??___aldiv+2)^(0+128),w
  1370  0371  00A5               	movwf	?___aldiv^(0+128)
  1371  0372  0008               	return
  1372                           ; =============== function ___aldiv ends ======
      +                          =========
  1373  0373                     __end_of___aldiv:
  1374                           
  1375                           	psect	text97
  1376                           ; *************** function _abs ***************
  1377                           ; Defined at:
  1378                           ;		line 5 in file "../../common/abs.c"
  1379                           ; Parameters:
  1380                           ;		a           	offs:   0	type: int 
  1381                           ; Auto variables:
  1382                           ;		None
  1383                           ; Return value:
  1384                           ;		type: int 
  1385                           ;		size: 2
  1386                           ; Registers used:
  1387                           ;		wreg, status,2, status,0
  1388                           ; Tracked objects:
  1389                           ;		On entry : 100/100
  1390                           ;		On exit  : 100/100
  1391                           ;		Unchanged: FFFFFEFF/0
  1392                           ; Data sizes:
  1393                           ;		Autos:    0
  1394                           ;		Params:   2
  1395                           ;		Temp:     2
  1396                           ;		Total:    4
  1397                           ; This function calls:
  1398                           ;		Nothing
  1399                           ; This function is called by:
  1400                           ;		_PID
  1401                           ; This function uses a non-reentrant model
  1402                           ; 
  1403  04F9                     _abs:
  1404                           ; Regs used in _abs: [wreg+status,2+status,0]
  1405  04F9  1FA6               	btfss	(?_abs+1)^(0+128),7
  1406  04FA  0008               	return
  1407  04FB  0826               	movf	(?_abs+1)^(0+128),w
  1408  04FC  00A8               	movwf	(??_abs+1)^(0+128)
  1409  04FD  0825               	movf	?_abs^(0+128),w
  1410  04FE  00A7               	movwf	??_abs^(0+128)
  1411  04FF  09A7               	comf	??_abs^(0+128),f
  1412  0500  09A8               	comf	(??_abs+1)^(0+128),f
  1413  0501  0AA7               	incf	??_abs^(0+128),f
  1414  0502  1903               	btfsc	3,2
  1415  0503  0AA8               	incf	(??_abs+1)^(0+128),f
  1416  0504  0827               	movf	??_abs^(0+128),w
  1417  0505  00A5               	movwf	?_abs^(0+128)
  1418  0506  0828               	movf	(??_abs+1)^(0+128),w
  1419  0507  00A6               	movwf	(?_abs+1)^(0+128)
  1420  0508  0008               	return
  1421                           ; =============== function _abs ends ==========
      +                          =====
  1422  0509                     __end_of_abs:
  1423                           
  1424                           	psect	text98
  1425                           ; *************** function ___lmul ************
      +                          ***
  1426                           ; Defined at:
  1427                           ;		line 3 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC\PRO\9.60\sources\lmul.c"
  1428                           ; Parameters:
  1429                           ;		multiplier  	offs:   0	type: unsigned long 
  1430                           ;		multiplicand	offs:   4	type: unsigned long 
  1431                           ; Auto variables:
  1432                           ;		product     	       	type: unsigned long 
  1433                           ; Return value:
  1434                           ;		type: unsigned long 
  1435                           ;		size: 4
  1436                           ; Registers used:
  1437                           ;		wreg, status,2, status,0
  1438                           ; Tracked objects:
  1439                           ;		On entry : 100/100
  1440                           ;		On exit  : 100/100
  1441                           ;		Unchanged: FFFFFEFF/0
  1442                           ; Data sizes:
  1443                           ;		Autos:    4
  1444                           ;		Params:   8
  1445                           ;		Temp:     0
  1446                           ;		Total:   12
  1447                           ; This function calls:
  1448                           ;		Nothing
  1449                           ; This function is called by:
  1450                           ;		_PID
  1451                           ; This function uses a non-reentrant model
  1452                           ; 
  1453  04AD                     ___lmul:
  1454                           ; Regs used in ___lmul: [wreg+status,2+status,0
      +                          ]
  1455  04AD  01AD               	clrf	??___lmul^(0+128)
  1456  04AE  01AE               	clrf	(??___lmul+1)^(0+128)
  1457  04AF  01AF               	clrf	(??___lmul+2)^(0+128)
  1458  04B0  01B0               	clrf	(??___lmul+3)^(0+128)
  1459  04B1                     l135:
  1460  04B1  1C25               	btfss	?___lmul^(0+128),0
  1461  04B2  2CC7               	goto	l136
  1462  04B3  0829               	movf	(?___lmul+4)^(0+128),w
  1463  04B4  07AD               	addwf	??___lmul^(0+128),f
  1464  04B5  082A               	movf	(?___lmul+5)^(0+128),w
  1465  04B6  1103               	bcf	3,2
  1466  04B7  1803               	btfsc	3,0
  1467  04B8  0A2A               	incf	(?___lmul+5)^(0+128),w
  1468  04B9  1D03               	btfss	3,2
  1469  04BA  07AE               	addwf	(??___lmul+1)^(0+128),f
  1470  04BB  082B               	movf	(?___lmul+6)^(0+128),w
  1471  04BC  1103               	bcf	3,2
  1472  04BD  1803               	btfsc	3,0
  1473  04BE  0A2B               	incf	(?___lmul+6)^(0+128),w
  1474  04BF  1D03               	btfss	3,2
  1475  04C0  07AF               	addwf	(??___lmul+2)^(0+128),f
  1476  04C1  082C               	movf	(?___lmul+7)^(0+128),w
  1477  04C2  1103               	bcf	3,2
  1478  04C3  1803               	btfsc	3,0
  1479  04C4  0A2C               	incf	(?___lmul+7)^(0+128),w
  1480  04C5  1D03               	btfss	3,2
  1481  04C6  07B0               	addwf	(??___lmul+3)^(0+128),f
  1482  04C7                     l136:
  1483  04C7  1003               	bcf	3,0
  1484  04C8  0DA9               	rlf	(?___lmul+4)^(0+128),f
  1485  04C9  0DAA               	rlf	(?___lmul+5)^(0+128),f
  1486  04CA  0DAB               	rlf	(?___lmul+6)^(0+128),f
  1487  04CB  0DAC               	rlf	(?___lmul+7)^(0+128),f
  1488  04CC  1003               	bcf	3,0
  1489  04CD  0CA8               	rrf	(?___lmul+3)^(0+128),f
  1490  04CE  0CA7               	rrf	(?___lmul+2)^(0+128),f
  1491  04CF  0CA6               	rrf	(?___lmul+1)^(0+128),f
  1492  04D0  0CA5               	rrf	?___lmul^(0+128),f
  1493  04D1  0828               	movf	(?___lmul+3)^(0+128),w
  1494  04D2  0427               	iorwf	(?___lmul+2)^(0+128),w
  1495  04D3  0426               	iorwf	(?___lmul+1)^(0+128),w
  1496  04D4  0425               	iorwf	?___lmul^(0+128),w
  1497  04D5  1D03               	btfss	3,2
  1498  04D6  2CB1               	goto	l135
  1499  04D7  0830               	movf	(??___lmul+3)^(0+128),w
  1500  04D8  00A8               	movwf	(?___lmul+3)^(0+128)
  1501  04D9  082F               	movf	(??___lmul+2)^(0+128),w
  1502  04DA  00A7               	movwf	(?___lmul+2)^(0+128)
  1503  04DB  082E               	movf	(??___lmul+1)^(0+128),w
  1504  04DC  00A6               	movwf	(?___lmul+1)^(0+128)
  1505  04DD  082D               	movf	??___lmul^(0+128),w
  1506  04DE  00A5               	movwf	?___lmul^(0+128)
  1507  04DF  0008               	return
  1508                           ; =============== function ___lmul ends =======
      +                          ========
  1509  04E0                     __end_of___lmul:
  1510                           
  1511                           	psect	text99
  1512                           ; *************** function ___awdiv ***********
      +                          ****
  1513                           ; Defined at:
  1514                           ;		line 5 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC\PRO\9.60\sources\awdiv.c"
  1515                           ; Parameters:
  1516                           ;		dividend    	offs:   0	type: int 
  1517                           ;		divisor     	offs:   2	type: int 
  1518                           ; Auto variables:
  1519                           ;		counter     	       	type: unsigned char 
  1520                           ;		sign        	       	type: unsigned char 
  1521                           ;		quotient    	       	type: int 
  1522                           ; Return value:
  1523                           ;		type: int 
  1524                           ;		size: 2
  1525                           ; Registers used:
  1526                           ;		wreg, status,2, status,0
  1527                           ; Tracked objects:
  1528                           ;		On entry : 100/100
  1529                           ;		On exit  : 100/100
  1530                           ;		Unchanged: FFFFFEFF/0
  1531                           ; Data sizes:
  1532                           ;		Autos:    4
  1533                           ;		Params:   4
  1534                           ;		Temp:     0
  1535                           ;		Total:    8
  1536                           ; This function calls:
  1537                           ;		Nothing
  1538                           ; This function is called by:
  1539                           ;		_PID
  1540                           ;		_Isr
  1541                           ; This function uses a non-reentrant model
  1542                           ; 
  1543  0468                     ___awdiv:
  1544                           ; Regs used in ___awdiv: [wreg+status,2+status,
      +                          0]
  1545  0468  01AA               	clrf	(??___awdiv+1)^(0+128)
  1546  0469  1FA8               	btfss	(?___awdiv+3)^(0+128),7
  1547  046A  2C72               	goto	l228
  1548  046B  09A7               	comf	(?___awdiv+2)^(0+128),f
  1549  046C  09A8               	comf	(?___awdiv+3)^(0+128),f
  1550  046D  0AA7               	incf	(?___awdiv+2)^(0+128),f
  1551  046E  1903               	btfsc	3,2
  1552  046F  0AA8               	incf	(?___awdiv+3)^(0+128),f
  1553  0470  01AA               	clrf	(??___awdiv+1)^(0+128)
  1554  0471  0AAA               	incf	(??___awdiv+1)^(0+128),f
  1555  0472                     l228:
  1556  0472  1FA6               	btfss	(?___awdiv+1)^(0+128),7
  1557  0473  2C7B               	goto	l229
  1558  0474  09A5               	comf	?___awdiv^(0+128),f
  1559  0475  09A6               	comf	(?___awdiv+1)^(0+128),f
  1560  0476  0AA5               	incf	?___awdiv^(0+128),f
  1561  0477  1903               	btfsc	3,2
  1562  0478  0AA6               	incf	(?___awdiv+1)^(0+128),f
  1563  0479  3001               	movlw	1
  1564  047A  06AA               	xorwf	(??___awdiv+1)^(0+128),f
  1565  047B                     l229:
  1566  047B  01AB               	clrf	(??___awdiv+2)^(0+128)
  1567  047C  01AC               	clrf	(??___awdiv+3)^(0+128)
  1568  047D  0828               	movf	((?___awdiv+3)^(0+128))& (0+127),w
  1569  047E  0427               	iorwf	((?___awdiv+2)^(0+128))& (0+127),w
  1570  047F  1903               	btfsc	3,2
  1571  0480  2CA0               	goto	l230
  1572  0481  01A9               	clrf	??___awdiv^(0+128)
  1573  0482                     L9:
  1574  0482  0AA9               	incf	??___awdiv^(0+128),f
  1575  0483  1003               	bcf	3,0
  1576  0484  1BA8               	btfsc	(?___awdiv+3)^(0+128),7
  1577  0485  2C8A               	goto	L11
  1578  0486  0DA7               	rlf	(?___awdiv+2)^(0+128),f
  1579  0487  0DA8               	rlf	(?___awdiv+3)^(0+128),f
  1580  0488  2C82               	goto	L9
  1581  0489                     l236:
  1582  0489  1003               	bcf	3,0
  1583  048A                     L11:
  1584  048A  0DAB               	rlf	(??___awdiv+2)^(0+128),f
  1585  048B  0DAC               	rlf	(??___awdiv+3)^(0+128),f
  1586  048C  0828               	movf	(?___awdiv+3)^(0+128),w
  1587  048D  0226               	subwf	(?___awdiv+1)^(0+128),w
  1588  048E  1D03               	btfss	3,2
  1589  048F  2C92               	goto	u2385
  1590  0490  0827               	movf	(?___awdiv+2)^(0+128),w
  1591  0491  0225               	subwf	?___awdiv^(0+128),w
  1592  0492                     u2385:
  1593  0492  1C03               	btfss	3,0
  1594  0493  2C9C               	goto	L10
  1595  0494  0827               	movf	(?___awdiv+2)^(0+128),w
  1596  0495  02A5               	subwf	?___awdiv^(0+128),f
  1597  0496  0828               	movf	(?___awdiv+3)^(0+128),w
  1598  0497  1C03               	btfss	3,0
  1599  0498  03A6               	decf	(?___awdiv+1)^(0+128),f
  1600  0499  02A6               	subwf	(?___awdiv+1)^(0+128),f
  1601  049A  142B               	bsf	(??___awdiv+2)^(0+128),0
  1602  049B  1003               	bcf	3,0
  1603  049C                     L10:
  1604  049C  0CA8               	rrf	(?___awdiv+3)^(0+128),f
  1605  049D  0CA7               	rrf	(?___awdiv+2)^(0+128),f
  1606  049E  0BA9               	decfsz	??___awdiv^(0+128),f
  1607  049F  2C89               	goto	l236
  1608  04A0                     l230:
  1609  04A0  08AA               	movf	(??___awdiv+1)^(0+128),f
  1610  04A1  1903               	btfsc	3,2
  1611  04A2  2CA8               	goto	l238
  1612  04A3  09AB               	comf	(??___awdiv+2)^(0+128),f
  1613  04A4  09AC               	comf	(??___awdiv+3)^(0+128),f
  1614  04A5  0AAB               	incf	(??___awdiv+2)^(0+128),f
  1615  04A6  1903               	btfsc	3,2
  1616  04A7  0AAC               	incf	(??___awdiv+3)^(0+128),f
  1617  04A8                     l238:
  1618  04A8  082C               	movf	(??___awdiv+3)^(0+128),w
  1619  04A9  00A6               	movwf	(?___awdiv+1)^(0+128)
  1620  04AA  082B               	movf	(??___awdiv+2)^(0+128),w
  1621  04AB  00A5               	movwf	?___awdiv^(0+128)
  1622  04AC  0008               	return
  1623                           ; =============== function ___awdiv ends ======
      +                          =========
  1624  04AD                     __end_of___awdiv:
  1625                           
  1626                           	psect	text100
  1627                           ; *************** function ___wmul ************
      +                          ***
  1628                           ; Defined at:
  1629                           ;		line 3 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC\PRO\9.60\sources\wmul.c"
  1630                           ; Parameters:
  1631                           ;		multiplier  	offs:   0	type: unsigned int 
  1632                           ;		multiplicand	offs:   2	type: unsigned int 
  1633                           ; Auto variables:
  1634                           ;		product     	       	type: unsigned int 
  1635                           ; Return value:
  1636                           ;		type: unsigned int 
  1637                           ;		size: 2
  1638                           ; Registers used:
  1639                           ;		wreg, status,2, status,0
  1640                           ; Tracked objects:
  1641                           ;		On entry : 100/100
  1642                           ;		On exit  : 100/100
  1643                           ;		Unchanged: FFFFFEFF/0
  1644                           ; Data sizes:
  1645                           ;		Autos:    2
  1646                           ;		Params:   4
  1647                           ;		Temp:     0
  1648                           ;		Total:    6
  1649                           ; This function calls:
  1650                           ;		Nothing
  1651                           ; This function is called by:
  1652                           ;		_PID
  1653                           ; This function uses a non-reentrant model
  1654                           ; 
  1655  04E0                     ___wmul:
  1656                           ; Regs used in ___wmul: [wreg+status,2+status,0
      +                          ]
  1657  04E0  01A9               	clrf	??___wmul^(0+128)
  1658  04E1  01AA               	clrf	(??___wmul+1)^(0+128)
  1659  04E2                     l71:
  1660  04E2  1C25               	btfss	?___wmul^(0+128),0
  1661  04E3  2CEA               	goto	l72
  1662  04E4  0827               	movf	(?___wmul+2)^(0+128),w
  1663  04E5  07A9               	addwf	??___wmul^(0+128),f
  1664  04E6  1803               	btfsc	3,0
  1665  04E7  0AAA               	incf	(??___wmul+1)^(0+128),f
  1666  04E8  0828               	movf	(?___wmul+3)^(0+128),w
  1667  04E9  07AA               	addwf	(??___wmul+1)^(0+128),f
  1668  04EA                     l72:
  1669  04EA  1003               	bcf	3,0
  1670  04EB  0DA7               	rlf	(?___wmul+2)^(0+128),f
  1671  04EC  0DA8               	rlf	(?___wmul+3)^(0+128),f
  1672  04ED  1003               	bcf	3,0
  1673  04EE  0CA6               	rrf	(?___wmul+1)^(0+128),f
  1674  04EF  0CA5               	rrf	?___wmul^(0+128),f
  1675  04F0  0826               	movf	((?___wmul+1)^(0+128))& (0+127),w
  1676  04F1  0425               	iorwf	(?___wmul^(0+128))& (0+127),w
  1677  04F2  1D03               	btfss	3,2
  1678  04F3  2CE2               	goto	l71
  1679  04F4  082A               	movf	(??___wmul+1)^(0+128),w
  1680  04F5  00A6               	movwf	(?___wmul+1)^(0+128)
  1681  04F6  0829               	movf	??___wmul^(0+128),w
  1682  04F7  00A5               	movwf	?___wmul^(0+128)
  1683  04F8  0008               	return
  1684                           ; =============== function ___wmul ends =======
      +                          ========
  1685  04F9                     __end_of___wmul:
  1686                           
  1687                           	psect	intrtext
  1688                           ; *************** function _Isr ***************
  1689                           ; Defined at:
  1690                           ;		line 273 in file "C:\Users\Jorge Aguilar\Doc
      +                          uments\PROGRAMACION\SEGWAY Jhons\16f684\c684.c"
  1691                           ; Parameters:
  1692                           ;		None
  1693                           ; Auto variables:
  1694                           ;		None
  1695                           ; Return value:
  1696                           ;		type: void 
  1697                           ;		size: 0
  1698                           ; Registers used:
  1699                           ;		wreg, status,2, status,0, pclath, cstack
  1700                           ; Tracked objects:
  1701                           ;		On entry : 100/100
  1702                           ;		On exit  : 100/100
  1703                           ;		Unchanged: FFFFFEFF/0
  1704                           ; Data sizes:
  1705                           ;		Autos:    0
  1706                           ;		Params:   0
  1707                           ;		Temp:     4
  1708                           ;		Total:    4
  1709                           ; This function calls:
  1710                           ;		i1___awdiv
  1711                           ; This function is called by:
  1712                           ;		Interrupt level 1
  1713                           ; This function uses a non-reentrant model
  1714                           ; 
  1715                           ;c684.c: 272: void interrupt Isr()
  1716                           ;c684.c: 273: {
  1717  025C                     _Isr:
  1718                           ;c684.c: 277: if(T0IF&&T0IE){
  1719  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1720  025D  190B               	btfsc	11,2
  1721  025E  1E8B               	btfss	11,5
  1722  025F  2A95               	goto	i1l53
  1723                           ;c684.c: 278: TMR0 = 10;
  1724  0260  300A               	movlw	10
  1725  0261  0081               	movwf	1	;volatile
  1726                           ;c684.c: 279: T0IF = 0;
  1727  0262  110B               	bcf	11,2
  1728                           ;c684.c: 280: RA4 = 1;
  1729  0263  1605               	bsf	5,4
  1730                           ;c684.c: 282: temp_int = 0;
  1731  0264  01F9               	clrf	121
  1732  0265  01FA               	clrf	122
  1733                           ;c684.c: 283: temp_int = ADRESH << 8;
  1734  0266  081E               	movf	30,w	;volatile
  1735  0267  00FA               	movwf	122
  1736  0268  01F9               	clrf	121
  1737                           ;c684.c: 284: temp_int = temp_int + ADRESL - 51
      +                          2;
  1738  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1739  026A  081E               	movf	30,w	;volatile
  1740  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1741  026C  0779               	addwf	121,w
  1742  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1743  026E  00B3               	movwf	??_Isr^(0+128)
  1744  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0270  087A               	movf	122,w
  1746  0271  1803               	btfsc	3,0
  1747  0272  0A7A               	incf	122,w
  1748  0273  1683               	bsf	3,5	;RP0=1, select bank1
  1749  0274  00B4               	movwf	(??_Isr^(0+128)+1)
  1750  0275  0833               	movf	??_Isr^(0+128),w
  1751  0276  3E00               	addlw	0
  1752  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0278  00F9               	movwf	121
  1754  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1755  027A  0834               	movf	(??_Isr+1)^(0+128),w
  1756  027B  1803               	btfsc	3,0
  1757  027C  3E01               	addlw	1
  1758  027D  3EFE               	addlw	254
  1759  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1760  027F  00FA               	movwf	122
  1761                           ;c684.c: 285: en0 = temp_int + off_set/8;
  1762  0280  3008               	movlw	8
  1763  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1764  0282  00B9               	movwf	(?i1___awdiv+2)& (0+127)
  1765  0283  01BA               	clrf	(?i1___awdiv+3)& (0+127)
  1766  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0285  0878               	movf	120,w
  1768  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0287  00B7               	movwf	?i1___awdiv^(0+128)
  1770  0288  01B8               	clrf	(?i1___awdiv+1)^(0+128)
  1771  0289  1BB7               	btfsc	?i1___awdiv^(0+128),7
  1772  028A  03B8               	decf	(?i1___awdiv+1)^(0+128),f
  1773  028B  2423               	fcall	i1___awdiv
  1774  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1775  028D  0879               	movf	121,w
  1776  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1777  028F  0737               	addwf	?i1___awdiv^(0+128),w
  1778  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0291  00FB               	movwf	123
  1780                           ;c684.c: 287: do_PID = 1;
  1781  0292  147D               	bsf	125,0
  1782                           ;c684.c: 288: GODONE = 1;
  1783  0293  149F               	bsf	31,1
  1784                           ;c684.c: 289: }
  1785  0294  2A98               	goto	i1l54
  1786  0295                     i1l53:
  1787                           ;c684.c: 290: else
  1788                           ;c684.c: 291: {
  1789                           ;c684.c: 292: PIR1 = 0;
  1790  0295  018C               	clrf	12	;volatile
  1791                           ;c684.c: 293: RAIF = 0;
  1792  0296  100B               	bcf	11,0
  1793                           ;c684.c: 294: INTF = 0;
  1794  0297  108B               	bcf	11,1
  1795  0298                     i1l54:
  1796                           ;c684.c: 295: }
  1797                           ;c684.c: 296: if(temp_int > 180){
  1798  0298  087A               	movf	122,w
  1799  0299  3A80               	xorlw	128
  1800  029A  1683               	bsf	3,5	;RP0=1, select bank1
  1801  029B  00B3               	movwf	??_Isr^(0+128)
  1802  029C  3080               	movlw	128
  1803  029D  0233               	subwf	??_Isr^(0+128),w
  1804  029E  1D03               	btfss	3,2
  1805  029F  2AA3               	goto	i1u24310
  1806  02A0  30B5               	movlw	181
  1807  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1808  02A2  0279               	subwf	121,w
  1809  02A3                     i1u24310:
  1810  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1811                           ;c684.c: 298: DC1B0 = DC1B1 = 0;
  1812  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1813  02A5  1C03               	btfss	3,0
  1814  02A6  2AC7               	goto	L12
  1815  02A7  1295               	bcf	21,5
  1816  02A8  1215               	bcf	21,4
  1817                           ;c684.c: 299: CCPR1L = 0;
  1818  02A9  0193               	clrf	19	;volatile
  1819                           ;c684.c: 300: en0 = en1 = en2 = en3 = off_set =
      +                           0;
  1820  02AA  01F8               	clrf	120
  1821  02AB  01F7               	clrf	119
  1822  02AC  01EF               	clrf	111
  1823  02AD  01FC               	clrf	124
  1824  02AE  01FB               	clrf	123
  1825                           ;c684.c: 301: Cn = integral_term = derivative_t
      +                          erm = SumE = RA4 = 0;
  1826  02AF  1205               	bcf	5,4
  1827  02B0  1003               	bcf	3,0
  1828  02B1  3000               	movlw	0
  1829  02B2  1803               	btfsc	3,0
  1830  02B3  3001               	movlw	1
  1831  02B4  00EB               	movwf	107
  1832  02B5  01EC               	clrf	108
  1833  02B6  086C               	movf	108,w
  1834  02B7  00EE               	movwf	110
  1835  02B8  086B               	movf	107,w
  1836  02B9  00ED               	movwf	109
  1837  02BA  086E               	movf	110,w
  1838  02BB  00E2               	movwf	98
  1839  02BC  086D               	movf	109,w
  1840  02BD  00E1               	movwf	97
  1841  02BE  00E7               	movwf	103
  1842  02BF  0862               	movf	98,w
  1843  02C0  00E8               	movwf	104
  1844  02C1  3000               	movlw	0
  1845  02C2  1BE8               	btfsc	104,7
  1846  02C3  30FF               	movlw	255
  1847  02C4  00E9               	movwf	105
  1848  02C5  00EA               	movwf	106
  1849                           ;c684.c: 302: do_PID = 0;
  1850  02C6  107D               	bcf	125,0
  1851                           ;c684.c: 303: }
  1852                           ;c684.c: 304: if(temp_int < -180){
  1853  02C7                     L12:
  1854  02C7  087A               	movf	122,w
  1855  02C8  3A80               	xorlw	128
  1856  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1857  02CA  00B3               	movwf	??_Isr^(0+128)
  1858  02CB  307F               	movlw	127
  1859  02CC  0233               	subwf	??_Isr^(0+128),w
  1860  02CD  1D03               	btfss	3,2
  1861  02CE  2AD2               	goto	i1u24410
  1862  02CF  304C               	movlw	76
  1863  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1864  02D1  0279               	subwf	121,w
  1865  02D2                     i1u24410:
  1866  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1867  02D3  1803               	btfsc	3,0
  1868  02D4  2AF6               	goto	i1l52
  1869                           ;c684.c: 306: DC1B0 = DC1B1 = 0;
  1870  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1871  02D6  1295               	bcf	21,5
  1872  02D7  1215               	bcf	21,4
  1873                           ;c684.c: 307: CCPR1L = 0;
  1874  02D8  0193               	clrf	19	;volatile
  1875                           ;c684.c: 308: en0 = en1 = en2 = en3 = off_set =
      +                           0;
  1876  02D9  01F8               	clrf	120
  1877  02DA  01F7               	clrf	119
  1878  02DB  01EF               	clrf	111
  1879  02DC  01FC               	clrf	124
  1880  02DD  01FB               	clrf	123
  1881                           ;c684.c: 309: Cn = integral_term = derivative_t
      +                          erm = SumE = RA4 = 0;
  1882  02DE  1205               	bcf	5,4
  1883  02DF  1003               	bcf	3,0
  1884  02E0  3000               	movlw	0
  1885  02E1  1803               	btfsc	3,0
  1886  02E2  3001               	movlw	1
  1887  02E3  00EB               	movwf	107
  1888  02E4  01EC               	clrf	108
  1889  02E5  086C               	movf	108,w
  1890  02E6  00EE               	movwf	110
  1891  02E7  086B               	movf	107,w
  1892  02E8  00ED               	movwf	109
  1893  02E9  086E               	movf	110,w
  1894  02EA  00E2               	movwf	98
  1895  02EB  086D               	movf	109,w
  1896  02EC  00E1               	movwf	97
  1897  02ED  00E7               	movwf	103
  1898  02EE  0862               	movf	98,w
  1899  02EF  00E8               	movwf	104
  1900  02F0  3000               	movlw	0
  1901  02F1  1BE8               	btfsc	104,7
  1902  02F2  30FF               	movlw	255
  1903  02F3  00E9               	movwf	105
  1904  02F4  00EA               	movwf	106
  1905                           ;c684.c: 310: do_PID = 0;
  1906  02F5  107D               	bcf	125,0
  1907                           ;c684.c: 311: }
  1908                           ;c684.c: 313: }
  1909  02F6                     i1l52:
  1910  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1911  02F7  0836               	movf	(??_Isr+3)^(0+128),w
  1912  02F8  008A               	movwf	10
  1913  02F9  0835               	movf	(??_Isr+2)^(0+128),w
  1914  02FA  0083               	movwf	3
  1915  02FB  0EFF               	swapf	127,f
  1916  02FC  0E7F               	swapf	127,w
  1917  02FD  0009               	retfie
  1918                           ; =============== function _Isr ends ==========
      +                          =====
  1919  02FE                     __end_of_Isr:
  1920                           
  1921                           	psect	intentry
  1922                           ; Regs used in _Isr: [wreg+status,2+status,0+pc
      +                          lath+cstack]
  1923  0004                     interrupt_function:
  1924  0000                     saved_w	set	127
  1925  0004  00FF               	movwf	127
  1926  0005  0803               	movf	3,w
  1927  0006  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0007  00B5               	movwf	(??_Isr+2)^(0+128)
  1929  0008  080A               	movf	10,w
  1930  0009  00B6               	movwf	(??_Isr+3)^(0+128)
  1931  000A  2A5C               	ljmp	_Isr
  1932                           
  1933                           	psect	text102
  1934                           ; *************** function i1___awdiv *********
      +                          ******
  1935                           ; Defined at:
  1936                           ;		line 5 in file "C:\Program Files\HI-TECH Sof
      +                          tware\PICC\PRO\9.60\sources\awdiv.c"
  1937                           ; Parameters:
  1938                           ;		dividend    	offs:   0	type: int 
  1939                           ;		divisor     	offs:   2	type: int 
  1940                           ; Auto variables:
  1941                           ;		sign        	       	type: unsigned char 
  1942                           ;		counter     	       	type: unsigned char 
  1943                           ;		quotient    	       	type: int 
  1944                           ; Return value:
  1945                           ;		type: int 
  1946                           ;		size: 2
  1947                           ; Registers used:
  1948                           ;		wreg, status,2, status,0
  1949                           ; Tracked objects:
  1950                           ;		On entry : 100/100
  1951                           ;		On exit  : 100/100
  1952                           ;		Unchanged: FFFFFEFF/0
  1953                           ; Data sizes:
  1954                           ;		Autos:    4
  1955                           ;		Params:   4
  1956                           ;		Temp:     0
  1957                           ;		Total:    8
  1958                           ; This function calls:
  1959                           ;		Nothing
  1960                           ; This function is called by:
  1961                           ;		i1_PID
  1962                           ;		_Isr
  1963                           ; This function uses a non-reentrant model
  1964                           ; 
  1965  0423                     i1___awdiv:
  1966                           ; Regs used in i1___awdiv: [wreg+status,2+statu
      +                          s,0]
  1967  0423  01BB               	clrf	??i1___awdiv^(0+128)
  1968  0424  1FBA               	btfss	(?i1___awdiv+3)^(0+128),7
  1969  0425  2C2D               	goto	i1l228
  1970  0426  09B9               	comf	(?i1___awdiv+2)^(0+128),f
  1971  0427  09BA               	comf	(?i1___awdiv+3)^(0+128),f
  1972  0428  0AB9               	incf	(?i1___awdiv+2)^(0+128),f
  1973  0429  1903               	btfsc	3,2
  1974  042A  0ABA               	incf	(?i1___awdiv+3)^(0+128),f
  1975  042B  01BB               	clrf	??i1___awdiv^(0+128)
  1976  042C  0ABB               	incf	??i1___awdiv^(0+128),f
  1977  042D                     i1l228:
  1978  042D  1FB8               	btfss	(?i1___awdiv+1)^(0+128),7
  1979  042E  2C36               	goto	i1l229
  1980  042F  09B7               	comf	?i1___awdiv^(0+128),f
  1981  0430  09B8               	comf	(?i1___awdiv+1)^(0+128),f
  1982  0431  0AB7               	incf	?i1___awdiv^(0+128),f
  1983  0432  1903               	btfsc	3,2
  1984  0433  0AB8               	incf	(?i1___awdiv+1)^(0+128),f
  1985  0434  3001               	movlw	1
  1986  0435  06BB               	xorwf	??i1___awdiv^(0+128),f
  1987  0436                     i1l229:
  1988  0436  01BD               	clrf	(??i1___awdiv+2)^(0+128)
  1989  0437  01BE               	clrf	(??i1___awdiv+3)^(0+128)
  1990  0438  083A               	movf	((?i1___awdiv+3)^(0+128))& (0+127),w
  1991  0439  0439               	iorwf	((?i1___awdiv+2)^(0+128))& (0+127),w
  1992  043A  1903               	btfsc	3,2
  1993  043B  2C5B               	goto	i1l230
  1994  043C  01BC               	clrf	(??i1___awdiv+1)^(0+128)
  1995  043D                     L13:
  1996  043D  0ABC               	incf	(??i1___awdiv+1)^(0+128),f
  1997  043E  1003               	bcf	3,0
  1998  043F  1BBA               	btfsc	(?i1___awdiv+3)^(0+128),7
  1999  0440  2C45               	goto	L15
  2000  0441  0DB9               	rlf	(?i1___awdiv+2)^(0+128),f
  2001  0442  0DBA               	rlf	(?i1___awdiv+3)^(0+128),f
  2002  0443  2C3D               	goto	L13
  2003  0444                     i1l236:
  2004  0444  1003               	bcf	3,0
  2005  0445                     L15:
  2006  0445  0DBD               	rlf	(??i1___awdiv+2)^(0+128),f
  2007  0446  0DBE               	rlf	(??i1___awdiv+3)^(0+128),f
  2008  0447  083A               	movf	(?i1___awdiv+3)^(0+128),w
  2009  0448  0238               	subwf	(?i1___awdiv+1)^(0+128),w
  2010  0449  1D03               	btfss	3,2
  2011  044A  2C4D               	goto	i1u2385
  2012  044B  0839               	movf	(?i1___awdiv+2)^(0+128),w
  2013  044C  0237               	subwf	?i1___awdiv^(0+128),w
  2014  044D                     i1u2385:
  2015  044D  1C03               	btfss	3,0
  2016  044E  2C57               	goto	L14
  2017  044F  0839               	movf	(?i1___awdiv+2)^(0+128),w
  2018  0450  02B7               	subwf	?i1___awdiv^(0+128),f
  2019  0451  083A               	movf	(?i1___awdiv+3)^(0+128),w
  2020  0452  1C03               	btfss	3,0
  2021  0453  03B8               	decf	(?i1___awdiv+1)^(0+128),f
  2022  0454  02B8               	subwf	(?i1___awdiv+1)^(0+128),f
  2023  0455  143D               	bsf	(??i1___awdiv+2)^(0+128),0
  2024  0456  1003               	bcf	3,0
  2025  0457                     L14:
  2026  0457  0CBA               	rrf	(?i1___awdiv+3)^(0+128),f
  2027  0458  0CB9               	rrf	(?i1___awdiv+2)^(0+128),f
  2028  0459  0BBC               	decfsz	(??i1___awdiv+1)^(0+128),f
  2029  045A  2C44               	goto	i1l236
  2030  045B                     i1l230:
  2031  045B  08BB               	movf	??i1___awdiv^(0+128),f
  2032  045C  1903               	btfsc	3,2
  2033  045D  2C63               	goto	i1l238
  2034  045E  09BD               	comf	(??i1___awdiv+2)^(0+128),f
  2035  045F  09BE               	comf	(??i1___awdiv+3)^(0+128),f
  2036  0460  0ABD               	incf	(??i1___awdiv+2)^(0+128),f
  2037  0461  1903               	btfsc	3,2
  2038  0462  0ABE               	incf	(??i1___awdiv+3)^(0+128),f
  2039  0463                     i1l238:
  2040  0463  083E               	movf	(??i1___awdiv+3)^(0+128),w
  2041  0464  00B8               	movwf	(?i1___awdiv+1)^(0+128)
  2042  0465  083D               	movf	(??i1___awdiv+2)^(0+128),w
  2043  0466  00B7               	movwf	?i1___awdiv^(0+128)
  2044  0467  0008               	return
  2045                           ; =============== function i1___awdiv ends ====
      +                          ===========
  2046  0468                     __end_ofi1___awdiv:	;_Cn
  2047                           
  2048                           	psect	rbss_0
  2049                           ;	FNARG	___aldiv,___lmul
  2050  0000                     _Cn	set	103	;_SumE
  2051  0000                     _SumE	set	107	;_derivative_term
  2052  0000                     _derivative_term	set	109	;_integral_term
  2053  0000                     _integral_term	set	97	;_kd
  2054  0000                     _kd	set	99	;_ki
  2055  0000                     _ki	set	101	;_temp_int
  2056  0000                     _en2	set	111	;_en3
  2057                           
  2058                           	psect	common
  2059  0000                     _temp_int	set	121	;_en0
  2060  0000                     _en0	set	123	;_en1
  2061  0000                     _en1	set	124	;_en2
  2062  0000                     _en3	set	119	;_off_set
  2063  0000                     _off_set	set	120	;_SumE_Max
  2064  0000                     _SumE_Max	set	115	;_SumE_Min
  2065  0000                     _SumE_Min	set	117	;_kp
  2066  0000                     _kp	set	112
  2067  0000                     _ADCON0	set	31
  2068  0000                     _ADCON1	set	159
  2069  0000                     _ADRESH	set	30
  2070  0000                     _ADRESL	set	158
  2071  0000                     _ANSEL	set	145
  2072  0000                     _CCP1CON	set	21
  2073  0000                     _CCPR1H	set	20
  2074  0000                     _CCPR1L	set	19
  2075  0000                     _CMCON0	set	25
  2076  0000                     _CMCON1	set	26
  2077  0000                     _ECCPAS	set	23
  2078  0000                     _EEADR	set	155
  2079  0000                     _EEADRL	set	155
  2080  0000                     _EECON1	set	156
  2081  0000                     _EECON2	set	157
  2082  0000                     _EEDAT	set	154
  2083  0000                     _EEDATA	set	154
  2084  0000                     _FSR	set	4
  2085  0000                     _INDF	set	0
  2086  0000                     _INTCON	set	11
  2087  0000                     _IOCA	set	150
  2088  0000                     _OPTION	set	129
  2089  0000                     _OSCCON	set	143
  2090  0000                     _OSCTUNE	set	144
  2091  0000                     _PCL	set	2
  2092  0000                     _PCLATH	set	10
  2093  0000                     _PCON	set	142
  2094  0000                     _PIE1	set	140
  2095  0000                     _PIR1	set	12
  2096  0000                     _PORTA	set	5
  2097  0000                     _PORTC	set	7
  2098  0000                     _PR2	set	146
  2099  0000                     _PWM1CON	set	22
  2100  0000                     _STATUS	set	3
  2101  0000                     _T1CON	set	16
  2102  0000                     _T2CON	set	18
  2103  0000                     _TMR0	set	1
  2104  0000                     _TMR1H	set	15
  2105  0000                     _TMR1L	set	14
  2106  0000                     _TMR2	set	17
  2107  0000                     _TRISA	set	133
  2108  0000                     _TRISC	set	135
  2109  0000                     _VRCON	set	153
  2110  0000                     _WDTCON	set	24
  2111  0000                     _WPUA	set	149	;_temp
  2112  0000                     _temp	set	114
  2113  0000                     _ADCS0	set	1276	;byte address: 0x9F
  2114  0000                     _ADCS1	set	1277	;byte address: 0x9F
  2115  0000                     _ADCS2	set	1278	;byte address: 0x9F
  2116  0000                     _ADFM	set	255	;byte address: 0x1F
  2117  0000                     _ADIE	set	1126	;byte address: 0x8C
  2118  0000                     _ADIF	set	102	;byte address: 0xC
  2119  0000                     _ADON	set	248	;byte address: 0x1F
  2120  0000                     _ANS0	set	1160	;byte address: 0x91
  2121  0000                     _ANS1	set	1161	;byte address: 0x91
  2122  0000                     _ANS2	set	1162	;byte address: 0x91
  2123  0000                     _ANS3	set	1163	;byte address: 0x91
  2124  0000                     _ANS4	set	1164	;byte address: 0x91
  2125  0000                     _ANS5	set	1165	;byte address: 0x91
  2126  0000                     _ANS6	set	1166	;byte address: 0x91
  2127  0000                     _ANS7	set	1167	;byte address: 0x91
  2128  0000                     _BOD	set	1136	;byte address: 0x8E
  2129  0000                     _C1IE	set	1123	;byte address: 0x8C
  2130  0000                     _C1IF	set	99	;byte address: 0xC
  2131  0000                     _C1INV	set	204	;byte address: 0x19
  2132  0000                     _C1OUT	set	206	;byte address: 0x19
  2133  0000                     _C2IE	set	1124	;byte address: 0x8C
  2134  0000                     _C2IF	set	100	;byte address: 0xC
  2135  0000                     _C2INV	set	205	;byte address: 0x19
  2136  0000                     _C2OUT	set	207	;byte address: 0x19
  2137  0000                     _C2SYNC	set	208	;byte address: 0x1A
  2138  0000                     _CARRY	set	24	;byte address: 0x3
  2139  0000                     _CCP1IE	set	1125	;byte address: 0x8C
  2140  0000                     _CCP1IF	set	101	;byte address: 0xC
  2141  0000                     _CCP1M0	set	168	;byte address: 0x15
  2142  0000                     _CCP1M1	set	169	;byte address: 0x15
  2143  0000                     _CCP1M2	set	170	;byte address: 0x15
  2144  0000                     _CCP1M3	set	171	;byte address: 0x15
  2145  0000                     _CHS0	set	250	;byte address: 0x1F
  2146  0000                     _CHS1	set	251	;byte address: 0x1F
  2147  0000                     _CHS2	set	252	;byte address: 0x1F
  2148  0000                     _CIS	set	203	;byte address: 0x19
  2149  0000                     _CM0	set	200	;byte address: 0x19
  2150  0000                     _CM1	set	201	;byte address: 0x19
  2151  0000                     _CM2	set	202	;byte address: 0x19
  2152  0000                     _DC	set	25	;byte address: 0x3
  2153  0000                     _DC1B0	set	172	;byte address: 0x15
  2154  0000                     _DC1B1	set	173	;byte address: 0x15
  2155  0000                     _ECCPAS0	set	188	;byte address: 0x17
  2156  0000                     _ECCPAS1	set	189	;byte address: 0x17
  2157  0000                     _ECCPAS2	set	190	;byte address: 0x17
  2158  0000                     _ECCPASE	set	191	;byte address: 0x17
  2159  0000                     _EEIE	set	1127	;byte address: 0x8C
  2160  0000                     _EEIF	set	103	;byte address: 0xC
  2161  0000                     _GIE	set	95	;byte address: 0xB
  2162  0000                     _GODONE	set	249	;byte address: 0x1F
  2163  0000                     _HTS	set	1146	;byte address: 0x8F
  2164  0000                     _INTE	set	92	;byte address: 0xB
  2165  0000                     _INTEDG	set	1038	;byte address: 0x81
  2166  0000                     _INTF	set	89	;byte address: 0xB
  2167  0000                     _IOCA0	set	1200	;byte address: 0x96
  2168  0000                     _IOCA1	set	1201	;byte address: 0x96
  2169  0000                     _IOCA2	set	1202	;byte address: 0x96
  2170  0000                     _IOCA3	set	1203	;byte address: 0x96
  2171  0000                     _IOCA4	set	1204	;byte address: 0x96
  2172  0000                     _IOCA5	set	1205	;byte address: 0x96
  2173  0000                     _IRCF0	set	1148	;byte address: 0x8F
  2174  0000                     _IRCF1	set	1149	;byte address: 0x8F
  2175  0000                     _IRCF2	set	1150	;byte address: 0x8F
  2176  0000                     _IRP	set	31	;byte address: 0x3
  2177  0000                     _LTS	set	1145	;byte address: 0x8F
  2178  0000                     _OSFIE	set	1122	;byte address: 0x8C
  2179  0000                     _OSFIF	set	98	;byte address: 0xC
  2180  0000                     _OSTS	set	1147	;byte address: 0x8F
  2181  0000                     _P1M0	set	174	;byte address: 0x15
  2182  0000                     _P1M1	set	175	;byte address: 0x15
  2183  0000                     _PD	set	27	;byte address: 0x3
  2184  0000                     _PDC0	set	176	;byte address: 0x16
  2185  0000                     _PDC1	set	177	;byte address: 0x16
  2186  0000                     _PDC2	set	178	;byte address: 0x16
  2187  0000                     _PDC3	set	179	;byte address: 0x16
  2188  0000                     _PDC4	set	180	;byte address: 0x16
  2189  0000                     _PDC5	set	181	;byte address: 0x16
  2190  0000                     _PDC6	set	182	;byte address: 0x16
  2191  0000                     _PEIE	set	94	;byte address: 0xB
  2192  0000                     _POR	set	1137	;byte address: 0x8E
  2193  0000                     _PRSEN	set	183	;byte address: 0x16
  2194  0000                     _PS0	set	1032	;byte address: 0x81
  2195  0000                     _PS1	set	1033	;byte address: 0x81
  2196  0000                     _PS2	set	1034	;byte address: 0x81
  2197  0000                     _PSA	set	1035	;byte address: 0x81
  2198  0000                     _PSSAC0	set	186	;byte address: 0x17
  2199  0000                     _PSSAC1	set	187	;byte address: 0x17
  2200  0000                     _PSSBD0	set	184	;byte address: 0x17
  2201  0000                     _PSSBD1	set	185	;byte address: 0x17
  2202  0000                     _RA0	set	40	;byte address: 0x5
  2203  0000                     _RA1	set	41	;byte address: 0x5
  2204  0000                     _RA2	set	42	;byte address: 0x5
  2205  0000                     _RA3	set	43	;byte address: 0x5
  2206  0000                     _RA4	set	44	;byte address: 0x5
  2207  0000                     _RA5	set	45	;byte address: 0x5
  2208  0000                     _RAIE	set	91	;byte address: 0xB
  2209  0000                     _RAIF	set	88	;byte address: 0xB
  2210  0000                     _RAPU	set	1039	;byte address: 0x81
  2211  0000                     _RC0	set	56	;byte address: 0x7
  2212  0000                     _RC1	set	57	;byte address: 0x7
  2213  0000                     _RC2	set	58	;byte address: 0x7
  2214  0000                     _RC3	set	59	;byte address: 0x7
  2215  0000                     _RC4	set	60	;byte address: 0x7
  2216  0000                     _RC5	set	61	;byte address: 0x7
  2217  0000                     _RD	set	1248	;byte address: 0x9C
  2218  0000                     _RP0	set	29	;byte address: 0x3
  2219  0000                     _RP1	set	30	;byte address: 0x3
  2220  0000                     _SBODEN	set	1140	;byte address: 0x8E
  2221  0000                     _SCS	set	1144	;byte address: 0x8F
  2222  0000                     _SWDTEN	set	192	;byte address: 0x18
  2223  0000                     _T0CS	set	1037	;byte address: 0x81
  2224  0000                     _T0IE	set	93	;byte address: 0xB
  2225  0000                     _T0IF	set	90	;byte address: 0xB
  2226  0000                     _T0SE	set	1036	;byte address: 0x81
  2227  0000                     _T1CKPS0	set	132	;byte address: 0x10
  2228  0000                     _T1CKPS1	set	133	;byte address: 0x10
  2229  0000                     _T1GE	set	134	;byte address: 0x10
  2230  0000                     _T1GINV	set	135	;byte address: 0x10
  2231  0000                     _T1GSS	set	209	;byte address: 0x1A
  2232  0000                     _T1OSCEN	set	131	;byte address: 0x10
  2233  0000                     _T1SYNC	set	130	;byte address: 0x10
  2234  0000                     _T2CKPS0	set	144	;byte address: 0x12
  2235  0000                     _T2CKPS1	set	145	;byte address: 0x12
  2236  0000                     _TMR1CS	set	129	;byte address: 0x10
  2237  0000                     _TMR1IE	set	1120	;byte address: 0x8C
  2238  0000                     _TMR1IF	set	96	;byte address: 0xC
  2239  0000                     _TMR1ON	set	128	;byte address: 0x10
  2240  0000                     _TMR2IE	set	1121	;byte address: 0x8C
  2241  0000                     _TMR2IF	set	97	;byte address: 0xC
  2242  0000                     _TMR2ON	set	146	;byte address: 0x12
  2243  0000                     _TO	set	28	;byte address: 0x3
  2244  0000                     _TOUTPS0	set	147	;byte address: 0x12
  2245  0000                     _TOUTPS1	set	148	;byte address: 0x12
  2246  0000                     _TOUTPS2	set	149	;byte address: 0x12
  2247  0000                     _TOUTPS3	set	150	;byte address: 0x12
  2248  0000                     _TRISA0	set	1064	;byte address: 0x85
  2249  0000                     _TRISA1	set	1065	;byte address: 0x85
  2250  0000                     _TRISA2	set	1066	;byte address: 0x85
  2251  0000                     _TRISA3	set	1067	;byte address: 0x85
  2252  0000                     _TRISA4	set	1068	;byte address: 0x85
  2253  0000                     _TRISA5	set	1069	;byte address: 0x85
  2254  0000                     _TRISC0	set	1080	;byte address: 0x87
  2255  0000                     _TRISC1	set	1081	;byte address: 0x87
  2256  0000                     _TRISC2	set	1082	;byte address: 0x87
  2257  0000                     _TRISC3	set	1083	;byte address: 0x87
  2258  0000                     _TRISC4	set	1084	;byte address: 0x87
  2259  0000                     _TRISC5	set	1085	;byte address: 0x87
  2260  0000                     _TUN0	set	1152	;byte address: 0x90
  2261  0000                     _TUN1	set	1153	;byte address: 0x90
  2262  0000                     _TUN2	set	1154	;byte address: 0x90
  2263  0000                     _TUN3	set	1155	;byte address: 0x90
  2264  0000                     _TUN4	set	1156	;byte address: 0x90
  2265  0000                     _ULPWUE	set	1141	;byte address: 0x8E
  2266  0000                     _VCFG	set	254	;byte address: 0x1F
  2267  0000                     _VR0	set	1224	;byte address: 0x99
  2268  0000                     _VR1	set	1225	;byte address: 0x99
  2269  0000                     _VR2	set	1226	;byte address: 0x99
  2270  0000                     _VR3	set	1227	;byte address: 0x99
  2271  0000                     _VREN	set	1231	;byte address: 0x99
  2272  0000                     _VRR	set	1229	;byte address: 0x99
  2273  0000                     _WDTPS0	set	193	;byte address: 0x18
  2274  0000                     _WDTPS1	set	194	;byte address: 0x18
  2275  0000                     _WDTPS2	set	195	;byte address: 0x18
  2276  0000                     _WDTPS3	set	196	;byte address: 0x18
  2277  0000                     _WPUA0	set	1192	;byte address: 0x95
  2278  0000                     _WPUA1	set	1193	;byte address: 0x95
  2279  0000                     _WPUA2	set	1194	;byte address: 0x95
  2280  0000                     _WPUA4	set	1196	;byte address: 0x95
  2281  0000                     _WPUA5	set	1197	;byte address: 0x95
  2282  0000                     _WR	set	1249	;byte address: 0x9C
  2283  0000                     _WREN	set	1250	;byte address: 0x9C
  2284  0000                     _WRERR	set	1251	;byte address: 0x9C
  2285  0000                     _ZERO	set	26	;_do_PID
  2286                           
  2287                           	psect	rbit_0
  2288  0000                     _do_PID	set	1000	;btemp
  2289                           
  2290                           	psect	fnauto1
  2291  0000                     btemp	set	126
  2292  00A0                     


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Tue Jun 05 06:08:42 2012

       ??_Inicializa 00A0             __Lrbss_0 0061  
                  l7 0020            __Lrdata_0 0000  
          __Lramdata 0000             _SumE_Max 0073  
           _SumE_Min 0075                   l20 03FB  
                 l12 03E1                   l21 03FC  
                 l13 03E0                   _DC 0019  
                 l15 03E5                   l24 040D  
                 l32 0064                   l41 01ED  
                 l33 00CD                   l26 0412  
                 l18 03F6                   l50 023A  
                 l42 01EE                   l34 00E1  
                 l27 0413                   l43 01F4  
                 l35 011C                   l44 01F5  
                 l36 0130                   l46 0252  
                 l71 04E2                   l47 0232  
                 l39 01CE                   l72 04EA  
                 l48 0233                   l49 0239  
                 _PD 001B                   _RD 04E0  
                 _Cn 0067                   _TO 001C  
                 _WR 04E1                   _kd 0063  
       ___aldiv_sign 00AD                   _ki 0065  
                 _kp 0070                  l300 035C  
                l230 04A0                  l135 04B1  
                l136 04C7                  l306 0331  
                l236 0489                  l228 0472  
                l308 036A                  l229 047B  
                l238 04A8                  _CM0 00C8  
                _CM1 00C9                  _CM2 00CA  
                l298 030E                  l299 031D  
                _BOD 0470                  _CIS 00CB  
                _GIE 005F                  _RA0 0028  
                _RA1 0029                  _RA2 002A  
                _RA3 002B                  _RC0 0038  
                _RA4 002C                  _RC1 0039  
                _RA5 002D                  _RC2 003A  
                _RC3 003B                  _RC4 003C  
                _RC5 003D                  _FSR 0004  
                _PCL 0002                  _PS0 0408  
                _PR2 0092                  _PID 0024  
                _PS1 0409                  _RP0 001D  
                _PS2 040A                  _IRP 001F  
                _RP1 001E                  _HTS 047A  
                _SCS 0478                  _PSA 040B  
                _LTS 0479                  _VR0 04C8  
                _VR1 04C9                  _VR2 04CA  
                _VR3 04CB                  _POR 0471  
                _VRR 04CD                  _Isr 025C  
                _en0 007B                  _en1 007C  
                _en2 006F                  _en3 0077  
                _abs 04F9   i1___awdiv_dividend 00B7  
               ?_PID 00A0       ___lmul_product 00AD  
               ?_Isr 00B3                 _C1IE 0463  
               ?_abs 00A5                 _C1IF 0063  
               _C2IE 0464                 _C2IF 0064  
               _ADIE 0466                 _ADIF 0066  
               _ADFM 00FF             __tempreg 00A0  
               _ADON 00F8                 _P1M0 00AE  
               _CHS0 00FA                 _P1M1 00AF  
               _CHS1 00FB                 _CHS2 00FC  
               _EEIE 0467                 _EEIF 0067  
               _ANS0 0488                 _ANS1 0489  
               _ANS2 048A                 _ANS3 048B  
               _ANS4 048C                 _ANS5 048D  
               _ANS6 048E                 _ANS7 048F  
               _T1GE 0086                 _T0IE 005D  
               _T0IF 005A                 _T0CS 040D  
               _PDC0 00B0                 _PDC1 00B1  
               _PDC2 00B2                 _PDC3 00B3  
               u2105 0102                 _PDC4 00B4  
               _T0SE 040C                 _PDC5 00B5  
               _IOCA 0096                 _PDC6 00B6  
               _INDF 0000                 u2134 019D  
               u2144 01BA                 u2164 01E1  
               u2195 0206                 u2285 0344  
               _PIE1 008C                 u2385 0492  
               _RAIE 005B                 _PEIE 005E  
               _RAIF 0058                 _INTE 005C  
               _INTF 0059                 i1l52 02F6  
               i1l53 0295                 i1l54 0298  
               _PCON 008E                 _PIR1 000C  
               _RAPU 040F                 _VCFG 00FE  
               _TMR0 0001                 _TMR2 0011  
          __databank 0000                 _OSTS 047B  
               _TUN0 0480                 _TUN1 0481  
               _TUN2 0482                 _TUN3 0483  
               _TUN4 0484                 _VREN 04CF  
               _ZERO 001A                 _WREN 04E2  
               _WPUA 0095                 _SumE 006B  
  ___lmul_multiplier 00A5                 _main 001E  
               _temp 0072                 btemp 007E  
               start 000B         ___awdiv_sign 00AA  
  interrupt_function 0004   i1___awdiv_quotient 00BD  
              ??_PID 00A0              ?___lmul 00A5  
              ??_Isr 00B3             _temp_int 0079  
            ?___wmul 00A5      __end_of___aldiv 0373  
           ??___lmul 00AD                ??_abs 00A7  
    __end_of___awdiv 04AD             ??___wmul 00A9  
            _CCP1CON 0015              _ECCPAS0 00BC  
            _ECCPAS1 00BD              _ECCPAS2 00BE  
            _ECCPASE 00BF                _C1INV 00CC  
              _DC1B0 00AC                _DC1B1 00AD  
              _C2INV 00CD                _C1OUT 00CE  
              _C2OUT 00CF                _ADCS0 04FC  
              _ADCS1 04FD                _ADCS2 04FE  
              ?_main 00A0                _EEADR 009B  
              _EEDAT 009A                _CARRY 0018  
              _ANSEL 0091                u21110 0115  
              _T1CON 0010                u21210 0128  
              _IOCA0 04B0                u20510 0046  
              _IOCA1 04B1                _IOCA2 04B2  
              _T2CON 0012                _IOCA3 04B3  
              _IOCA4 04B4                u20610 005C  
              _IOCA5 04B5                u20810 00C6  
              u20910 00D9                _T1GSS 00D1  
            _T1CKPS0 0084              _T1CKPS1 0085  
              _IRCF0 047C                _IRCF1 047D  
              _IRCF2 047E              _T2CKPS0 0090  
            _T2CKPS1 0091                i1l230 045B  
              i1l236 0444                i1l228 042D  
              i1l229 0436                i1l238 0463  
              _OSFIE 0462                _OSFIF 0062  
              _TMR1H 000F                _TMR1L 000E  
              _PORTA 0005              _T1OSCEN 0083  
              _PORTC 0007                _PRSEN 00B7  
              _TRISA 0085                _TRISC 0087  
              _VRCON 0099                _WPUA0 04A8  
              _WPUA1 04A9                _WPUA2 04AA  
              _WPUA4 04AC                _WPUA5 04AD  
    ___aldiv_divisor 00A9                _WRERR 04E3  
    ___aldiv_counter 00AE              i1u24310 02A3  
            i1u24410 02D2                _abs_a 00A5  
            _OSCTUNE 0090              _PWM1CON 0016  
            _TOUTPS0 0093              _TOUTPS1 0094  
            _TOUTPS2 0095              _TOUTPS3 0096  
              pclath 000A             intlevel1 0004  
              status 0003    ___wmul_multiplier 00A5  
    _derivative_term 006D     ___awdiv_dividend 00A5  
            ___aldiv 02FE              ___awdiv 0468  
           ?___aldiv 00A5             ?___awdiv 00A5  
          ??___aldiv 00AD       ___wmul_product 00A9  
  i1___awdiv_divisor 00B9            ??___awdiv 00A9  
  i1___awdiv_counter 00BC               ??_main 00A0  
            _off_set 0078        _integral_term 0061  
             _C2SYNC 00D0       __end_of___lmul 04E0  
             _ADCON0 001F               _ADCON1 009F  
             _CCP1M0 00A8               _CCP1M1 00A9  
             _CCP1M2 00AA               _CCP1M3 00AB  
             _CCP1IE 0465               _CCP1IF 0065  
     __end_of___wmul 04F9               _ADRESH 001E  
             _ADRESL 009E               _EEADRL 009B  
             _EEDATA 009A               _ECCPAS 0017  
             _CCPR1H 0014               _CCPR1L 0013  
             _EECON1 009C               _EECON2 009D  
             _CMCON0 0019               _CMCON1 001A  
       __end_of_main 0024     ___awdiv_quotient 00AB  
             _T1GINV 0087               _GODONE 00F9  
             _T1SYNC 0082            i1___awdiv 0423  
             _INTEDG 040E               _PCLATH 000A  
             _INTCON 000B    __end_ofi1___awdiv 0468  
             _SBODEN 0474               i1u2385 044D  
             _OSCCON 008F               _TMR1IE 0460  
             _TMR1IF 0060               _TMR1CS 0081  
             _TMR2IE 0461               _TMR2IF 0061  
             _PSSAC0 00BA               _PSSAC1 00BB  
             _PSSBD0 00B8               _PSSBD1 00B9  
             _TMR1ON 0080               _OPTION 0081  
             _TMR2ON 0092     ___aldiv_dividend 00A5  
             _WDTCON 0018               _WDTPS0 00C1  
             _WDTPS1 00C2               _WDTPS2 00C3  
             _WDTPS3 00C4               _TRISA0 0428  
             _TRISA1 0429               _TRISA2 042A  
             _TRISA3 042B               _TRISC0 0438  
             _TRISA4 042C               _TRISC1 0439  
             _TRISA5 042D               _TRISC2 043A  
             _TRISC3 043B               _TRISC4 043C  
             _TRISC5 043D               _STATUS 0003  
             _SWDTEN 00C0               _ULPWUE 0475  
         ?i1___awdiv 00B7      ___awdiv_divisor 00A7  
___lmul_multiplicand 00A9      ___awdiv_counter 00A9  
             ___lmul 04AD          ??i1___awdiv 00BB  
             _do_PID 03E8           _Constantes 03D4  
             ___wmul 04E0   __end_of_Constantes 0423  
        __end_of_PID 025C  ___wmul_multiplicand 00A7  
     i1___awdiv_sign 00BB           _Inicializa 0373  
        __end_of_Isr 02FE          __end_of_abs 0509  
 __end_of_Inicializa 03D4          ?_Constantes 00A0  
   ___aldiv_quotient 00AF               saved_w 007F  
        ?_Inicializa 00A0         ??_Constantes 00A0  
           __Hcommon 007D            __Hrdata_0 0001  
          __Hramdata 0001             __Hrbss_0 0070  
           __Lcommon 0077  
